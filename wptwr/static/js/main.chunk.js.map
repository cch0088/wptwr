{"version":3,"sources":["logo.svg","components/Header.jsx","features/ModalSlice.jsx","features/UserSlice.jsx","config.js","features/SessionSlice.jsx","components/Modal.jsx","components/forms/LoginForm.jsx","features/UserServices.jsx","components/UserControl.jsx","components/Footer.jsx","components/NavBar.jsx","App.js","serviceWorker.js","features/ContentSlice.jsx","index.js"],"names":["module","exports","Header","React","createElement","id","NavLink","to","src","logo","alt","openState","show","closedState","modalSlice","createSlice","name","initialState","value","reducers","openModal","state","closeModal","actions","initialStateValue","current_user","uid","roles","csrf_token","logout_token","userSlice","login","action","payload","logout","API","SESSION","concat","LOGIN","LOGOUT","sessionSlice","newSession","endSession","Modal","_ref","children","dispatch","useDispatch","className","onClick","e","target","handleClose","LoginForm","error","setError","useState","username","setUserName","password","setPassword","handleLogin","preventDefault","length","async","response","fetch","API_SESSION_TOKEN","text","sessionTokenService","then","token","options","method","mode","credentials","headers","body","JSON","stringify","params","URLSearchParams","API_LOGIN","json","loginService","user","message","type","onChange","href","UserControl","useSelector","modal","history","useNavigate","Fragment","push","role","aria-label","API_LOGOUT","logoutService","resp","console","log","Footer","NavBar","App","Boolean","window","location","hostname","match","contentSlice","pushContent","purgeContent","store","configureStore","reducer","session","sessionReducer","userReducer","modalReducer","content","contentReducer","ReactDOM","createRoot","document","getElementById","render","BrowserRouter","StrictMode","Provider","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.6ad05eed.svg\";","import React from \"react\";\n\nimport { NavLink } from \"react-router-dom\";\nimport logo from '../logo.svg';\n\nfunction Header() {\n\nreturn (\n    <div id=\"head-nav-bar\">\n        <div id=\"logo\">\n            <NavLink to=\"/\"><img src={logo} alt=\"Logo\" /></NavLink>\n        </div>\n        <div id=\"logotext\">Travel With Reason</div>\n    </div>\n    )\n}\nexport default Header;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst openState = { show: true };\nconst closedState = { show: false };\n\nexport const modalSlice = createSlice({\n    name: 'modal',\n    initialState: { value: closedState },\n    reducers: {\n       openModal: (state) => {\n        state.value = openState;\n       },\n       closeModal: (state) => {\n        state.value = closedState;\n       } \n    }\n});\n\nexport const { openModal, closeModal } = modalSlice.actions;\n\nexport default modalSlice.reducer;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialStateValue = {\n    current_user: {\n        uid: 0,\n        roles: [],\n        name: ''\n    },\n    csrf_token: null,\n    logout_token: null\n};\n\nexport const userSlice = createSlice({\n    name: 'user',\n    initialState: { value: initialStateValue },\n    reducers: {\n       login: (state, action) => {\n        state.value = action.payload;\n       },\n       logout: (state) => {\n        state.value = initialStateValue;\n       } \n    }\n});\n\nexport const { login, logout } = userSlice.actions;\n\nexport default userSlice.reducer;\n","export const API = \"https://travelwithreason.com/wp-json\";\nexport const SESSION = `${API}/session/token`;\nexport const LOGIN = `${API}/user/login`;\nexport const LOGOUT = `${API}/user/logout`;\nexport const FRONT = `${API}/frontpage`;\nexport const NEWS = `${API}/news`;\nexport const GUIDES = `${API}/guides`;\nexport const STORE = `${API}/store`;\nexport const COMMUNITY = `${API}/community`;\nexport const ABOUT = `${API}/about`;\nexport const CONTACT = `${API}/contact`;\nexport const VENDORS = `${API}/vendors`;\nexport const TERMS = `${API}/terms`;\nexport const PRIVACY = `${API}/privacy`;\nexport const ORDERS = `${API}/orders`;\nexport const SEARCH = `${API}/search`;\nexport const REGISTER = `${API}/register`;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialStateValue = {};\n\nexport const sessionSlice = createSlice({\n    name: 'session',\n    initialState: { value: initialStateValue },\n    reducers: {\n       newSession: (state, action) => {\n        state.value = action.payload;\n       },\n       endSession: (state) => {\n        state.value = initialStateValue;\n       } \n    }\n});\n\nexport const { newSession, endSession } = sessionSlice.actions;\n\nexport default sessionSlice.reducer;\n","import React from 'react';\n\nimport { closeModal } from '../features/ModalSlice';\nimport { useDispatch } from 'react-redux';\n\nfunction Modal({children}) \n{\n    const dispatch = useDispatch();\n\n    const handleClose = (e) => {\n        if (e.target.className === 'modal-bg') {dispatch(closeModal());}\n    };\n\n    return (\n        <div className='modal-bg' onClick={(e) => handleClose(e)}>\n            <section className='modal-main'>\n                {children}\n            </section>\n        </div>);\n};\n\nexport default Modal;\n","import React from 'react';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { login } from '../../features/UserSlice';\nimport { newSession } from '../../features/SessionSlice';\nimport { loginService, sessionTokenService } from '../../features/UserServices';\nimport { closeModal } from '../../features/ModalSlice';\n\nfunction LoginForm() {\n\n    const dispatch = useDispatch();\n\n    const [error, setError] = useState(null);\n    const [username, setUserName] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n\n    function handleLogin(e) {\n        e.preventDefault();\n\n        if (username.length > 0 && password.length > 0) {\n            sessionTokenService().then(token => {\n                if (token.csrf_token) {\n                    dispatch(newSession(token));\n                    loginService(username, password, token.csrf_token)\n                    .then(user => {\n                        if (user.current_user) {\n                            dispatch(login(user));\n                            dispatch(closeModal());\n                        }\n                        else {\n                            setError(user.message);\n                        }\n                    });\n                }\n                else {\n                    setError(token.message);\n                }\n            });\n        } else {\n            setError(\"Missing username or password!\");\n        }\n    }\n\nreturn (<form id=\"site-form\">\n        <div className=\"title-label\">SIGN IN</div>\n        \n        {(error) ? <div className='error-label'>{error}</div> : null}\n        \n        <div className=\"label-login\">Username</div>\n        \n        <input className=\"field-login\" \n            type=\"text\"\n            name=\"username\"\n            onChange={(e) => { setUserName(e.target.value); }}\n            value={username}\n        />\n\n        <div className=\"label-login\">Password</div>\n\n        <input className=\"field-login\"\n            type=\"password\"\n            name=\"password\"\n            onChange={(e) => { setPassword(e.target.value); }}\n            value={password}\n        />\n\n        <a className=\"link-label\" href=\"/forgot\">Forgot Password</a>\n\n        <input className=\"button\"\n            type=\"submit\"\n            name=\"login\"\n            value=\"Sign In\"\n            onClick={(e) => { handleLogin(e); }}\n        />\n\n        <a className=\"link-label\" href=\"/register\">Create Account</a>\n    </form>)\n}\n\nexport default LoginForm;\n","import { LOGIN as API_LOGIN } from '../config';\nimport { LOGOUT as API_LOGOUT } from '../config';\nimport { SESSION as API_SESSION_TOKEN } from '../config';\n\nfunction UserServices() {}\nexport default UserServices;\n\nexport async function loginService(username, password, csrf_token) {    \n    const options = {\n        method: 'POST',\n        mode: 'cors',\n        credentials: 'include',\n        headers: { \n            'Content-Type': 'application/json',\n            'X-CSRF-Token': csrf_token\n        },\n        body: JSON.stringify({\n            'name': username,\n            'pass': password\n        })\n    };\n\n    const params = '?' + new URLSearchParams({\n        '_format': 'json',\n    })\n\n    try {\n        const response = await fetch(API_LOGIN + params, options);\n        const data = await response.json();\n        return data;\n    }\n    catch {\n        return {\"message\": \"There was a problem with your request.\"};\n    }\n};\n\nexport async function logoutService(logout_token, csrf_token) {\n    const options = {\n        method: 'POST',\n        mode: 'cors',\n        credentials: 'include',\n        headers: { \n            'Content-Type': 'application/json',\n            'X-CSRF-Token': csrf_token\n        }\n    };\n    \n    const params = '?' + new URLSearchParams({\n        '_format': 'json',\n        'token': logout_token\n    })\n\n    try {\n        const response = await fetch(API_LOGOUT + params, options);\n        const data = await response.json();\n        return data;\n    }\n    catch {\n        return {\"message\": \"Logged out.\"};\n    }\n};\n\nexport async function sessionTokenService() {\n    try {\n        const response = await fetch(API_SESSION_TOKEN);\n        const data = await response.text();\n        return {\"csrf_token\": data};\n    }\n    catch {\n        return {\"message\": \"There was a problem with your session.\"};\n    }\n}\n","import React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { openModal } from '../features/ModalSlice';\nimport { logout } from '../features/UserSlice';\nimport { logoutService } from '../features/UserServices';\nimport { endSession } from '../features/SessionSlice';\nimport Modal from './Modal';\nimport LoginForm from './forms/LoginForm';\n\nfunction UserControl() {\n\n    const user = useSelector(state => state.user.value);\n    const modal = useSelector(state => state.modal.value);\n\n    const history = useNavigate();\n    const dispatch = useDispatch();\n\n    function handleLogout() {\n        logoutService(user.logout_token, user.csrf_token)\n        .then(resp => {\n            console.log(resp.message);\n            dispatch(logout());\n            dispatch(endSession());\n        });\n    }\n\n    function handleLogin() {\n        dispatch(openModal());\n    }\n\nreturn (\n        <div id=\"usercontrol\">\n            { modal.show && <Modal children={ <LoginForm /> }/> }\n            <>\n                <span className=\"userbutton\" onClick={() => { history.push(\"/orders\") }}>\n                    <span role=\"img\" aria-label=\"cart\">🛒</span> Orders\n                </span>\n                <span className=\"userbutton\" onClick={() => { history.push(\"/search\") }}>\n                    <span role=\"img\" aria-label=\"find\">🔍</span> Search\n                </span>\n            </>\n            {\n                (user.current_user.name === '') ?\n                <>\n                    <span className=\"userbutton\" onClick={() => { history.push(\"/register\") }}>\n                        <span role=\"img\" aria-label=\"new\">🆕</span> Sign Up\n                    </span>\n                    <span className=\"userbutton\" onClick={handleLogin}>\n                        <span role=\"img\" aria-label=\"head\">👤</span> Log In\n                    </span>\n                </> :\n                <>\n                    <span className=\"userbutton\" onClick={() => { history.push(\"/account\") }}>\n                        <span role=\"img\" aria-label=\"head\">👤</span> Account\n                    </span>\n                    <span className=\"userbutton\" onClick={handleLogout}>\n                        <span role=\"img\" aria-label=\"door\">🚪</span> Log Out\n                    </span>\n                </>\n            }\n        </div>\n    )\n}\nexport default UserControl;\n","import React from \"react\";\n\nfunction Footer() {\n\nreturn (\n    <div id=\"footer\">\n        <div>© 2023 Travel With Reason, LLC</div>\n    </div>\n    )\n}\nexport default Footer;\n","import React from \"react\";\n\nimport { NavLink } from \"react-router-dom\";\n\nfunction NavBar() {\n\nreturn(\n    <div id=\"nav-container\">\n        <div className=\"navigation\">\n            <NavLink to=\"/news\">News</NavLink>\n            <NavLink to=\"/guides\">Guides</NavLink>\n            <NavLink to=\"/store\">Store</NavLink>\n            <NavLink to=\"/community\">Community</NavLink>\n            <NavLink to=\"/about\">About Us</NavLink>\n            <NavLink to=\"/contact\">Contact Us</NavLink>\n            <NavLink to=\"/vendors\">Our Vendors</NavLink>\n            <NavLink to=\"/terms\">Terms of Use</NavLink>\n            <NavLink to=\"/privacy\">Privacy Policy</NavLink>\n        </div>\n     </div>\n    )\n}\n\nexport default NavBar;\n","import React from \"react\";\nimport Header from './components/Header';\nimport UserControl from './components/UserControl';\nimport Footer from './components/Footer';\nimport NavBar from './components/NavBar';\nimport './App.css';\n\nfunction App() {\n    return (\n      <>\n        <Header />\n        <NavBar />\n        <UserControl />\n        <Footer />\n      </>\n    );\n  }\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialStateValue = [\n    {\n        'nid': [\n            {\n                'value': '0'\n            }\n        ],\n        'title': [\n            {\n                'value': 'Loading...'\n            }\n        ],\n        'body': [\n            {\n                'value': 'Loading...'\n            }\n        ]\n    }\n];\n\nexport const contentSlice = createSlice({\n    name: 'content',\n    initialState: { value: initialStateValue },\n    reducers: {\n       pushContent: (state, action) => {\n        state.value = action.payload;\n       },\n       purgeContent: (state) => {\n        state.value = initialStateValue;\n       } \n    }\n});\n\nexport const { pushContent, purgeContent } = contentSlice.actions;\n\nexport default contentSlice.reducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { configureStore } from '@reduxjs/toolkit';\nimport { Provider } from 'react-redux';\nimport userReducer from './features/UserSlice';\nimport modalReducer from './features/ModalSlice';\nimport sessionReducer from './features/SessionSlice';\nimport contentReducer from './features/ContentSlice';\n\nconst store = configureStore({\n  reducer: {\n    session: sessionReducer,\n    user: userReducer,\n    modal: modalReducer,\n    content: contentReducer\n  }\n});\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <BrowserRouter>\n    <React.StrictMode>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </React.StrictMode>\n  </BrowserRouter>\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}