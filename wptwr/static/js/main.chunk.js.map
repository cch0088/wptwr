{"version":3,"sources":["logo.svg","logotext.svg","lib/validation.jsx","config.js","components/Header.jsx","features/ModalSlice.jsx","components/Modal.jsx","hooks/useAuth.tsx","components/forms/LoginForm.jsx","components/forms/RegisterForm.jsx","components/forms/ConfirmForm.jsx","components/forms/ResetByEmailForm.jsx","components/UserControl.jsx","components/Footer.jsx","components/Layout.jsx","features/PageServices.jsx","features/ContentSlice.jsx","components/MainMenu.jsx","components/Main.jsx","components/NoPage.jsx","components/forms/PasswordForm.jsx","components/PasswordReset.jsx","features/ForumSlice.jsx","components/forum/ForumSite.jsx","components/forum/ForumTopicList.jsx","lib/apolloClient.tsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","validateEmail","email","test","validatePassword","password1","password2","getRoot","wp_root_const","concat","WP_ROOT","GRAPHQL_URI","Header","navigate","useNavigate","React","createElement","id","onClick","src","logo","alt","logotext","openState","show","closedState","modalSlice","createSlice","name","initialState","value","reducers","openModal","state","closeModal","actions","Modal","_ref","children","dispatch","useDispatch","className","e","target","handleClose","DEFAULT_STATE","loggedIn","user","undefined","loading","error","AuthContext","createContext","GET_USER","gql","_templateObject","_taggedTemplateLiteral","AuthProvider","data","useQuery","viewer","Boolean","Provider","useAuth","useContext","LoginForm","setForm","message","setMessage","useState","username","setUsername","password","setPassword","LOG_IN","logIn","useMutation","refetchQueries","query","type","onChange","preventDefault","length","variables","login","then","_status","catch","_error","handleLogin","disabled","RegisterForm","isHuman","setIsHuman","setEmail","REGISTER_USER","register","PasswordStrengthBar","scoreWords","shortScoreWord","checked","handleSubmit","ConfirmForm","ResetByEmailForm","SEND_PASSWORD_RESET_EMAIL","sendPasswordResetEmail","UserControl","modal","useSelector","form","LOG_OUT","logOut","openForm","i","Fragment","role","aria-label","href","Footer","Layout","Outlet","async","getContent","fromUrl","response","fetch","json","initialStateValue","contentSlice","pushContent","action","payload","purgeContent","MainMenu","route","menu","content","useEffect","object","menuData","rendered","replace","split","filter","map","str","link","image","key","Main","API_PAGES","NoPage","PasswordForm","pkey","passwordConfirm","setPasswordConfirm","RESET_PASSWORD","resetPassword","PasswordReset","currentUrl","setKey","setUser","includes","searchUrl","URLSearchParams","values","forEach","x","push","forumSlice","pushForumContent","purgeForumContent","ForumSite","setCategoryId","setCategoryName","categories","forum","heading","topic","item","parent","description","header","handleNavigation","Number","ForumTopicList","categoryId","categoryName","topics","setTopics","setHeading","TOPIC_LIST","posts","nodes","postId","title","author","node","date","Intl","DateTimeFormat","year","day","month","hour","minute","format","Date","createHttpLink","uri","credentials","client","ApolloClient","cache","InMemoryCache","App","window","location","ApolloProvider","BrowserRouter","Routes","Route","path","nav","element","index","hostname","match","store","configureStore","reducer","modalReducer","contentReducer","forumReducer","ReactDOM","createRoot","document","getElementById","render","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.e9286273.svg\";","module.exports = __webpack_public_path__ + \"static/media/logotext.1ad91849.svg\";","export const validateEmail = (email) => {\n    // eslint-disable-next-line\n    const regex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return regex.test(email);\n}\n\nexport const validatePassword = (password1, password2) => {\n    return password1 === password2;\n}\n\nexport const getRoot = (wp_root_const) => {\n    if (wp_root_const !== '/') {\n        return (`/${wp_root_const}/`);\n    } else {\n        return wp_root_const;\n    }\n}\n\nexport const getDateFromString = (date) => {\n    const formatted = Intl.DateTimeFormat(\"en-US\", {\n        year: \"numeric\",\n        day: \"2-digit\",\n        month: \"long\",\n        hour: \"2-digit\",\n        minute: \"2-digit\"\n      }).format(new Date(date));\n    return formatted;\n}\n","import { getRoot } from \"./lib/validation\";\n\n// Use forward slash (/) if root is same as site\nexport const WP_ROOT = \"WordPress\";\n\n// GraphQL defaults\nexport const GRAPHQL_URI = getRoot(WP_ROOT) + \"graphql\";\n\n// WordPress defaults\nexport const WP_UPLOADS = \"wp-content/uploads\";\nexport const API_PAGES = \"wp-json/wp/v2/pages/?slug=\";\nexport const API_POSTS = \"wp-json/wp/v2/posts/?slug=\";\nexport const API_CATEGORIES = \"wp-json/wp/v2/categories\";\n\n// User accounts page\nexport const UI_ACCOUNT = \"wp-admin\";\n","import React from \"react\";\nimport logo from '../logo.svg';\nimport logotext from '../logotext.svg';\nimport { useNavigate } from \"react-router-dom\";\nimport { getRoot } from \"../lib/validation\";\nimport { WP_ROOT } from \"../config\";\n\nfunction Header() {\n    const navigate = useNavigate();\n\nreturn (\n    <div id=\"branding\" onClick={() => { navigate(getRoot(WP_ROOT)) }}>\n        <div id=\"logo\"><img src={logo} alt=\"Logo\" /></div>\n        <div id=\"logotext\"><img src={logotext} alt=\"Logo Text\" /></div>\n    </div>\n    )\n}\nexport default Header;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst openState = { show: true };\nconst closedState = { show: false };\n\nexport const modalSlice = createSlice({\n    name: 'modal',\n    initialState: { value: closedState },\n    reducers: {\n       openModal: (state) => {\n        state.value = openState;\n       },\n       closeModal: (state) => {\n        state.value = closedState;\n       }\n    }\n});\n\nexport const { openModal, closeModal } = modalSlice.actions;\n\nexport default modalSlice.reducer;\n","import React from 'react';\n\nimport { closeModal } from '../features/ModalSlice';\nimport { useDispatch } from 'react-redux';\n\nfunction Modal({children}) \n{\n    const dispatch = useDispatch();\n\n    const handleClose = (e) => {\n        if (e.target.className === \"modal-bg\") { dispatch(closeModal()); }\n    };\n\n    return (\n        <div className=\"modal-bg\" onClick={(e) => handleClose(e)}>\n            <section className=\"modal-main\">\n                {children}\n            </section>\n        </div>);\n};\n\nexport default Modal;\n","import { useQuery, gql, ApolloError } from \"@apollo/client\";\nimport React, { createContext, useContext, ReactNode } from \"react\";\n\nexport interface User {\n  id: string;\n  databaseId: number;\n  firstName: string;\n  lastName: string;\n  email: string;\n  capabilities: string[];\n}\n\ninterface AuthData {\n  loggedIn: boolean;\n  user?: User,\n  loading: boolean;\n  error?: ApolloError;\n}\n\nconst DEFAULT_STATE: AuthData = {\n  loggedIn: false,\n  user: undefined,\n  loading: false,\n  error: undefined,\n};\n\nconst AuthContext = createContext(DEFAULT_STATE);\n\nexport const GET_USER = gql`\n  query getUser {\n    viewer {\n      id\n      databaseId\n      firstName\n      lastName\n      email\n      capabilities\n    }\n  }\n`;\n\nexport function AuthProvider({ children }: { children: ReactNode }) {\n  const { data, loading, error } = useQuery(GET_USER);\n  const user = data?.viewer;\n  const loggedIn = Boolean(user);\n\n  const value = {\n    loggedIn,\n    user,\n    loading,\n    error,\n  };\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>\n}\n\nconst useAuth = () => useContext(AuthContext);\n\nexport default useAuth;","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useMutation, gql } from '@apollo/client';\nimport { GET_USER } from '../../hooks/useAuth';\nimport { closeModal } from '../../features/ModalSlice';\n\nfunction LoginForm({setForm}) {\n\n    const dispatch = useDispatch();\n\n    const [message, setMessage] = useState(null);\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n\n    const LOG_IN = gql`\n        mutation logIn($login: String!, $password: String!) {\n        loginWithCookies(input: { login: $login password: $password })\n        { status } }`;\n\n    const [logIn, { loading }] = useMutation(LOG_IN, {\n        refetchQueries: [\n        { query: GET_USER }\n        ],\n    });\n\n    function handleLogin(e) {\n        e.preventDefault();\n\n        if (username.length > 0 && password.length > 0) {\n            logIn({\n            variables: {\n                login: username,\n                password,\n            }\n            })\n            .then((_status) => dispatch(closeModal()))\n            .catch((_error) => setMessage('Invalid username or password!'));\n        } else {\n            setMessage('Missing username or password.');\n        }\n    }\n\nreturn (<form id=\"site-form\">\n        <div className=\"title-label\">SIGN IN</div>\n\n        {(message) ? <div className='error-label'>{message}</div> : null}\n\n        <div className=\"label-login\">Username</div>\n\n        <input className=\"field-login\"\n            type=\"text\"\n            name=\"username\"\n            value={username}\n            onChange={(e) => { setUsername(e.target.value); }}\n        />\n\n        <div className=\"label-login\">Password</div>\n\n        <input className=\"field-login\"\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={(e) => { setPassword(e.target.value); }}\n        />\n\n        <span className=\"link-label\" onClick={() => { setForm(3) }}>Forgot Password</span>\n\n        <input className=\"button\"\n            type=\"submit\"\n            name=\"login\"\n            value=\"Sign In\"\n            onClick={(e) => { handleLogin(e); }}\n            disabled={loading}\n        />\n\n        <span className=\"link-label\" onClick={() => { setForm(2) }}>Create Account</span>\n    </form>)\n}\n\nexport default LoginForm;\n","import React, { useState } from 'react';\nimport PasswordStrengthBar from 'react-password-strength-bar';\nimport { useMutation, gql } from '@apollo/client';\nimport { validateEmail } from '../../lib/validation';\n\nfunction RegisterForm({setForm}) {\n\n    const [message, setMessage] = useState(null);\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [isHuman, setIsHuman] = useState(false);\n    const [email, setEmail] = useState('');\n\n    const REGISTER_USER = gql`\n        mutation registerUser(\n            $username: String!\n            $email: String!\n            $password: String!\n        ) {\n            registerUser(\n                input: {\n                username: $username\n                email: $email\n                password: $password\n                }\n            ) { user { databaseId } }\n        }`;\n\n    const [register, { loading }] = useMutation(REGISTER_USER);\n\n    function handleSubmit(e) {\n        e.preventDefault();\n\n        if (isHuman && username.length > 0 && password.length > 0 && validateEmail(email)) {\n            register({\n            variables: {\n                username,\n                email,\n                password\n            }\n            })\n            .then((_status) => setForm(0))\n            .catch((_error) => setMessage('Username or e-mail already taken.'));\n        } else if (!validateEmail(email)) {\n            setMessage('Invalid e-mail provided.');\n        } else {\n            setMessage('Check that all fields are filled.');\n        }\n    }\n\nreturn (<form id=\"site-form\">\n        <div className=\"title-label\">SIGN UP</div>\n\n        {(message) ? <div className='error-label'>{message}</div> : null}\n\n        <div className=\"label-login\">Username</div>\n\n        <input className=\"field-login\" \n            type=\"text\"\n            name=\"username\"\n            value={username}\n            onChange={(e) => { setUsername(e.target.value); }}\n        />\n\n        <div className=\"label-login\">E-mail</div>\n\n        <input className=\"field-login\" \n            type=\"email\"\n            name=\"email\"\n            value={email}\n            onChange={(e) => { setEmail(e.target.value); }}\n        />\n\n        <div className=\"label-login\">Password</div>\n\n        <input className=\"field-login\"\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={(e) => { setPassword(e.target.value); }}\n        />\n\n        <PasswordStrengthBar\n            className=\"password-bar\"\n            password={password}\n            scoreWords={[\n                'Weak',\n                'Acceptable',\n                'Good',\n                'Strong',\n                'Excellent'\n            ]}\n            shortScoreWord='Weak'\n        />\n\n        <div className=\"label-login\">I'm not a bot</div>\n\n        <input className=\"human-check\"\n            type=\"checkbox\"\n            name=\"human\"\n            value=\"human\"\n            onChange={(e) => setIsHuman(e.target.checked)}\n        />\n\n        <input className=\"button\"\n            type=\"submit\"\n            name=\"register\"\n            value=\"Sign Up\"\n            disabled={!isHuman || loading}\n            onClick={(e) => { handleSubmit(e); }}\n        />\n    </form>)\n}\n\nexport default RegisterForm;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { closeModal } from '../../features/ModalSlice';\n\nfunction ConfirmForm() {\n\n    const dispatch = useDispatch();\n\n    return (<form id=\"site-form\">\n    <div className=\"label-login\">Please check your e-mail for next steps.</div>\n\n    <input className=\"button\"\n        type=\"button\"\n        name=\"ok\"\n        value=\"OK\"\n        onClick={() => { dispatch(closeModal()) }}\n    />\n    </form>)\n}\n\nexport default ConfirmForm;\n","import React, { useState } from 'react';\nimport { useMutation, gql } from '@apollo/client';\nimport { validateEmail } from '../../lib/validation';\n\nfunction ResetByEmailForm({setForm}) {\n\n    const [message, setMessage] = useState(null);\n    const [email, setEmail] = useState('');\n    const [isHuman, setIsHuman] = useState(false);\n\n    const SEND_PASSWORD_RESET_EMAIL = gql`\n        mutation sendPasswordResetEmail($username: String!) {\n        sendPasswordResetEmail(\n            input: { username: $username }\n        ) { user { databaseId } } }`;\n\n    const [sendPasswordResetEmail, { loading }] = useMutation(\n        SEND_PASSWORD_RESET_EMAIL\n    );\n\n    function handleSubmit(e) {\n        e.preventDefault();\n\n        if (validateEmail(email)) {\n            sendPasswordResetEmail({\n                variables: {\n                  username: email,\n                }\n            })\n            .then((_status) => setForm(0))\n            .catch((_error) => setMessage('E-mail could not be sent.'));\n        } else if (!validateEmail(email)) {\n            setMessage('Invalid e-mail provided.');\n        } else {\n            setMessage('Check that all fields are filled.');\n        }\n    }\n\n    return (<form id=\"site-form\">\n        <div className=\"title-label\">PASSWORD RESET</div>\n\n        {(message) ? <div className='error-label'>{message}</div> : null}\n\n        <div className=\"label-login\">E-mail</div>\n\n        <input className=\"field-login\" \n            type=\"email\"\n            name=\"email\"\n            value={email}\n            onChange={(e) => { setEmail(e.target.value); }}\n        />\n\n        <div className=\"label-login\">I'm not a bot</div>\n\n        <input className=\"human-check\"\n            type=\"checkbox\"\n            name=\"human\"\n            value=\"human\"\n            onChange={(e) => setIsHuman(e.target.checked)}\n        />\n\n        <input className=\"button\"\n            type=\"submit\"\n            name=\"send\"\n            value=\"Request\"\n            onClick={(e) => { handleSubmit(e); }}\n            disabled={!isHuman || loading}\n        />\n    </form>)\n}\n\nexport default ResetByEmailForm;\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { openModal } from '../features/ModalSlice';\nimport Modal from './Modal';\nimport LoginForm from './forms/LoginForm';\nimport useAuth, { GET_USER } from '../hooks/useAuth';\nimport { gql, useMutation } from '@apollo/client';\nimport { UI_ACCOUNT } from '../config';\nimport RegisterForm from './forms/RegisterForm';\nimport ConfirmForm from './forms/ConfirmForm';\nimport ResetByEmailForm from './forms/ResetByEmailForm';\n\nfunction UserControl() {\n\n    const modal = useSelector(state => state.modal.value);\n    const [form, setForm] = useState(0);\n\n    const dispatch = useDispatch();\n    const {loggedIn, loading} = useAuth();\n\n    const LOG_OUT = gql`\n        mutation logOut {\n            logout(input: {})\n            { status }\n        }`;\n\n    const [logOut] = useMutation(LOG_OUT, {\n        refetchQueries: [\n            { query: GET_USER }\n        ],\n    });\n\n    const openForm = (i) => {\n        setForm(i);\n        dispatch(openModal());\n    }\n\nreturn (\n        <div id=\"usercontrol\">\n            { form === 0 && modal.show && <Modal children={ <ConfirmForm /> }/> }\n            { form === 1 && modal.show && <Modal children={ <LoginForm setForm={setForm} /> }/> }\n            { form === 2 && modal.show && <Modal children={ <RegisterForm setForm={setForm} /> }/> }\n            { form === 3 && modal.show && <Modal children={ <ResetByEmailForm setForm={setForm} /> }/> }\n            {\n                (!loggedIn && !loading) &&\n                <>\n                    <span className=\"userbutton\" onClick={() => { openForm(2) }}>\n                        <span role=\"img\" aria-label=\"new\">🆕</span> Sign Up\n                    </span>\n                    <span className=\"userbutton\" onClick={() => { openForm(1) }}>\n                        <span role=\"img\" aria-label=\"head\">👤</span> Log In\n                    </span>\n                </>\n            }\n            {\n                (loggedIn && !loading) &&\n                <>\n                    <a className=\"userbutton\" href={UI_ACCOUNT}>\n                        <span role=\"img\" aria-label=\"head\">👤</span> Account\n                    </a>\n                    <span className=\"userbutton\" onClick={() => { logOut() }}>\n                        <span role=\"img\" aria-label=\"door\">🚪</span> Log Out\n                    </span>\n                </>\n            }\n            {\n                (loading) &&\n                <>\n                    <span className=\"userbutton\">\n                        <span role=\"img\" aria-label=\"hourglass\">⏳</span> Loading...\n                    </span>\n                </>\n            }\n        </div>\n    )\n}\nexport default UserControl;\n","import React from \"react\";\nimport logo from '../logo.svg';\nimport logotext from '../logotext.svg';\n\nfunction Footer() {\n\nreturn (\n        <div className=\"footer-row\">\n            <div id=\"logo-footer\"><img src={logo} alt=\"Logo\" /></div>\n            <div id=\"logotext-footer\"><img src={logotext} alt=\"Logo Text\" /></div>\n            <div className=\"footer-about\"><span className=\"footer-span\">A privacy focused travel community site.</span></div>\n            <a className=\"footer-button\" href=\"contact-page\">Contact</a>\n        </div>\n    )\n}\nexport default Footer;\n","import React from \"react\";\nimport Header from \"./Header\";\nimport UserControl from \"./UserControl\";\nimport { Outlet } from \"react-router-dom\";\nimport Footer from \"./Footer\";\n\nconst Layout = () => {\nreturn (\n        <>\n            <div id=\"head-wrap\">\n                <div id=\"head-container\">\n                    <Header />\n                    <UserControl />\n                </div>\n            </div>\n            <div id=\"content-wrap\">\n                <Outlet />\n            </div>\n            <div id=\"footer-wrap\">\n                <Footer />\n            </div>\n        </>\n    )\n};\n\nexport default Layout;\n","function PageServices() {}\nexport default PageServices;\n\nexport async function getContent(fromUrl) {\n    try {\n        const response = await fetch(fromUrl);\n        const data = await response.json();\n        return data;\n    }\n    catch {\n        return {\"message\": \"Access Error\"};\n    }\n};\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialStateValue = [{\n    \"id\": 0,\n    \"date\": null,\n    \"date_gmt\": null,\n    \"guid\": {\n        \"rendered\": \"\"\n    },\n    \"modified\": null,\n    \"modified_gmt\": null,\n    \"slug\": null,\n    \"status\": null,\n    \"type\": null,\n    \"link\": null,\n    \"title\": {\n        \"rendered\": \"\"\n    },\n    \"content\": {\n        \"rendered\": \"\",\n        \"protected\": false\n    },\n    \"excerpt\": {\n        \"rendered\": \"\",\n        \"protected\": false\n    },\n    \"author\": 0,\n    \"featured_media\": 0,\n    \"parent\": 0,\n    \"menu_order\": 0,\n    \"comment_status\": \"closed\",\n    \"ping_status\": \"closed\",\n    \"template\": \"\",\n    \"meta\": {\n        \"footnotes\": \"\"\n    },\n    \"_links\": {\n        \"self\": [],\n        \"collection\": [],\n        \"about\": [],\n        \"author\": [],\n        \"replies\": [],\n        \"version-history\": [],\n        \"predecessor-version\": [],\n        \"wp:attachment\": [],\n        \"curies\": [{\n            \"name\": \"wp\",\n            \"href\": \"https://api.w.org/{rel}\",\n            \"templated\": true\n        }]\n    }\n}];\n\nexport const contentSlice = createSlice({\n    name: 'content',\n    initialState: { value: initialStateValue },\n    reducers: {\n       pushContent: (state, action) => {\n        state.value = action.payload;\n       },\n       purgeContent: (state) => {\n        state.value = initialStateValue;\n       } \n    }\n});\n\nexport const { pushContent, purgeContent } = contentSlice.actions;\n\nexport default contentSlice.reducer;\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getContent } from \"../features/PageServices\";\nimport { pushContent } from \"../features/ContentSlice\";\nimport { WP_UPLOADS } from \"../config\";\n\nfunction MainMenu({route}) {\n\n    const dispatch = useDispatch();\n    const menu = useSelector(state => state.content.value);\n\n    useEffect(() => {\n        getContent(route).then(object => {\n            dispatch(pushContent(object));\n        });\n    },[dispatch, route]);\n\n    const regex = /(<([^>]+)>)/gi;\n\n    const menuData = menu[0]\n        .content\n        .rendered\n        .replace(regex, '')\n        .split(/\\s+/)\n        .filter((i) => (i !== ''));\n\n    return (\n        <div id=\"card-container\">\n            {menuData.map((str, i) => {\n                const [name, link, image] = str.split(':');\n                return (<a key={i} href={link} className=\"card\">\n                    <img className=\"card-photo\" alt={name} src={`${WP_UPLOADS}/${image}`} />\n                    <div className=\"card-text\">{name}</div>\n                </a>);\n            })}\n        </div>\n    )\n}\n\nexport default MainMenu;\n","import React from \"react\";\nimport MainMenu from \"./MainMenu\"\nimport { API_PAGES } from \"../config\";\n\nfunction Main() {\n    const menuRoute = API_PAGES + \"main-menu\";\n\n    return (\n        <div>\n            <div id=\"heading-container\"><h2>Website is under construction</h2></div>\n            <MainMenu route={menuRoute} />\n        </div>\n        )\n}\nexport default Main;\n","import React from \"react\";\n\nfunction NoPage() {\n    return (<div className=\"slide\">Resource not found</div>);\n}\nexport default NoPage;\n","import React, { useState } from 'react';\nimport PasswordStrengthBar from 'react-password-strength-bar';\nimport { useMutation, gql } from '@apollo/client';\nimport { getRoot, validatePassword } from '../../lib/validation';\nimport { useNavigate } from 'react-router-dom';\nimport { WP_ROOT } from '../../config';\n\nfunction PasswordForm({pkey, login}) {\n    const navigate = useNavigate();\n\n    const [message, setMessage] = useState(null);\n    const [password, setPassword] = useState('');\n    const [passwordConfirm, setPasswordConfirm] = useState('');\n\n    const RESET_PASSWORD = gql`\n        mutation resetUserPassword(\n            $key: String!\n            $login: String!\n            $password: String!\n        ) {\n            resetUserPassword(\n            input: {\n                key: $key\n                login: $login\n                password: $password\n            }\n            ) {\n            user {\n                databaseId\n            }\n            }\n        }`;\n\n    const [resetPassword, { loading }] = useMutation(RESET_PASSWORD);\n\n    function handleSubmit(e) {\n        e.preventDefault();\n\n        if (password.length > 0 && validatePassword(password, passwordConfirm)) {\n            resetPassword({\n                variables: {\n                  key: pkey,\n                  login,\n                  password,\n                },\n              })\n            .then((_status) => navigate(getRoot(WP_ROOT)))\n            .catch((_error) => setMessage('Error resetting password.'));\n        } else if (!validatePassword(password, passwordConfirm)) {\n            setMessage('Passwords do not match.');\n        } else {\n            setMessage('Check that all fields are filled.');\n        }\n    }\n\n    return (<form id=\"site-form\">\n        <div className=\"title-label\">PASSWORD RESET</div>\n\n        {(message) ? <div className='error-label'>{message}</div> : null}\n\n        <div className=\"label-login\">New password for {login}</div>\n\n        <div className=\"label-login\">Password</div>\n\n        <input className=\"field-login\"\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={(e) => { setPassword(e.target.value); }}\n        />\n\n        <div className=\"label-login\">Confirm Password</div>\n\n        <input className=\"field-login\"\n            type=\"password\"\n            name=\"password\"\n            value={passwordConfirm}\n            onChange={(e) => { setPasswordConfirm(e.target.value); }}\n        />\n\n        <PasswordStrengthBar\n            className=\"password-bar\"\n            password={password}\n            scoreWords={[\n                'Weak',\n                'Acceptable',\n                'Good',\n                'Strong',\n                'Excellent'\n            ]}\n            shortScoreWord='Weak'\n        />\n\n        <input className=\"button\"\n            type=\"submit\"\n            name=\"reset\"\n            value=\"Reset\"\n            onClick={(e) => { handleSubmit(e); }}\n            disabled={loading}\n        />\n\n        <span className=\"link-label\" onClick={() => { navigate(getRoot(WP_ROOT)) }}>Cancel</span>\n    </form>)\n}\n\nexport default PasswordForm;\n","import React, { useEffect, useState } from \"react\";\nimport { WP_ROOT } from \"../config\";\nimport { useNavigate } from \"react-router-dom\";\nimport { getRoot } from \"../lib/validation\";\nimport Modal from \"./Modal\";\nimport PasswordForm from \"./forms/PasswordForm\";\n\nfunction PasswordReset({currentUrl}) {\n    const navigate = useNavigate();\n\n    const [key, setKey] = useState();\n    const [user, setUser] = useState();\n\n    useEffect(() => {\n        if (currentUrl && currentUrl.includes('set-password')) {\n            const searchUrl = new URLSearchParams(currentUrl);\n            const values = [];\n            searchUrl.forEach((x) => values.push(x));\n            setKey(values[0]);\n            setUser(values[1]);\n        } else {\n            navigate(getRoot(WP_ROOT));\n        }\n    },[currentUrl, navigate]);\n\n    return (\n            <Modal children={ <PasswordForm pkey={key} login={user} /> } />\n        )\n}\nexport default PasswordReset;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialStateValue = [\n  {\n    \"id\": 1,\n    \"count\": 1,\n    \"description\": \"\",\n    \"link\": \"https://localhost/WordPress/category/uncategorized/\",\n    \"name\": \"Uncategorized\",\n    \"slug\": \"uncategorized\",\n    \"taxonomy\": \"category\",\n    \"parent\": 0,\n    \"meta\": [],\n    \"_links\": {\n      \"self\": [\n        {\n          \"href\": \"https://localhost/WordPress/wp-json/wp/v2/categories/1\"\n        }\n      ],\n      \"collection\": [\n        {\n          \"href\": \"https://localhost/WordPress/wp-json/wp/v2/categories\"\n        }\n      ],\n      \"about\": [\n        {\n          \"href\": \"https://localhost/WordPress/wp-json/wp/v2/taxonomies/category\"\n        }\n      ],\n      \"wp:post_type\": [\n        {\n          \"href\": \"https://localhost/WordPress/wp-json/wp/v2/posts?categories=1\"\n        }\n      ],\n      \"curies\": [\n        {\n          \"name\": \"wp\",\n          \"href\": \"https://api.w.org/{rel}\",\n          \"templated\": true\n        }\n      ]\n    }\n  }\n];\n\nexport const forumSlice = createSlice({\n    name: 'forumContent',\n    initialState: { value: initialStateValue },\n    reducers: {\n       pushForumContent: (state, action) => {\n        state.value = action.payload;\n       },\n       purgeForumContent: (state) => {\n        state.value = initialStateValue;\n       } \n    }\n});\n\nexport const { pushForumContent, purgeForumContent } = forumSlice.actions;\n\nexport default forumSlice.reducer;\n","import React, { useEffect } from \"react\";\nimport { API_CATEGORIES } from \"../../config\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getContent } from \"../../features/PageServices\";\nimport { pushForumContent } from \"../../features/ForumSlice\";\nimport { useNavigate } from \"react-router-dom\";\n\nfunction ForumSite({setCategoryId, setCategoryName}) {\n    const route = API_CATEGORIES;\n\n    const dispatch = useDispatch();\n    const categories = useSelector(state => state.forum.value);\n\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        getContent(route).then(object => {\n            dispatch(pushForumContent(object));\n        });\n    },[dispatch, route]);\n\n    const heading = [];\n    const topic = [];\n\n    categories.forEach(item => {\n        if (item.parent > 0) {\n            topic.push({\n                id: item.id,\n                name: item.name,\n                description: item.description,\n                link: item.link,\n                parent: item.parent\n            })\n        }\n        else {\n            heading.push({\n                id: item.id,\n                name: item.description\n            })\n        }\n    })\n\n    const handleNavigation = (id, name) => {\n        setCategoryId(Number(id));\n        setCategoryName(name);\n        navigate(\"threads\");\n    };\n\n    return (\n        <div className=\"forum-list-container\">\n            {heading.map((header) => {\n                return (\n                    <div className=\"forum-section\" key={header.id}>\n                        <div className=\"forum-category\">{header.name}</div>\n                        {topic.filter((item) => item.parent === header.id)\n                            .map((i) => {\n                                return (\n                                    <div key={i.id}\n                                        className=\"forum-topic\"\n                                        onClick={(e) => handleNavigation(i.id, i.name)}\n                                    >\n                                        <span className=\"bubble\" role=\"img\" aria-label=\"topic\">🗨️</span>\n                                        <div className=\"forum-topic-node\">\n                                            <div className=\"forum-topic-name\">{i.name}</div>\n                                            <div className=\"forum-topic-description\">{i.description}</div>\n                                        </div>\n                                    </div>\n                                );\n                        })}\n                    </div>\n                );\n            })}\n        </div>\n    );\n}\nexport default ForumSite;\n","import React, { useEffect, useState } from 'react';\nimport { useQuery, gql } from '@apollo/client';\nimport { getDateFromString } from '../../lib/validation';\n\nfunction ForumTopicList({categoryId, categoryName}) {\n\n    const [topics, setTopics] = useState([]);\n    const [heading, setHeading] = useState(categoryName);\n\n    const TOPIC_LIST = gql`\n        query getPostsByCategory(\n                $categoryId: Int!\n            )\n        {\n            posts(where: {categoryId: $categoryId}) {\n                nodes {\n                    postId\n                    title\n                    date\n                    author { node { name } }\n                    isSticky\n                    editingLockedBy { node { name } }\n                }\n            }\n        }`;\n\n    const { loading, error, data } = useQuery(TOPIC_LIST, { variables: { categoryId } });\n\n    useEffect(() => {\n        if (loading) {\n            setHeading('Loading...');\n        } else if (error) {\n            setHeading('Nothing to show here. There was a problem with your request.');\n        } else if (data.posts.nodes[0]) {\n            setHeading(null);\n            setTopics(data.posts.nodes);\n        } else {\n            setHeading('Nothing to show here. Feel free to add a topic.');\n        }\n    },[loading, error, data])\n\n    return (\n        <div className=\"forum-list-container\">\n            <div className=\"forum-section\">\n                <div className=\"forum-category\">{categoryName}</div>\n                <div>{heading}</div>\n                {topics.map((topic) => (\n                    <div key={topic.postId}\n                        id={topic.postId}\n                        className=\"forum-topic\"\n                    >\n                        <span className=\"bubble\" role=\"img\" aria-label=\"topic\">🗨️</span>\n                        <div className=\"forum-topic-node\">\n                            <div className=\"forum-topic-name\">{topic.title}</div>\n                            <div className=\"forum-topic-description\">\n                                By {topic.author.node.name} on {getDateFromString(topic.date)}\n                            </div>\n                        </div>\n                    </div>\n                ))}\n            </div>\n            {!error && <button className=\"forum-button\">New topic</button>}\n        </div>\n    );\n}\n\nexport default ForumTopicList;\n","import { ApolloClient, InMemoryCache, createHttpLink } from \"@apollo/client\";\nimport { GRAPHQL_URI } from \"../config\";\n\nconst link = createHttpLink({\n  uri: GRAPHQL_URI,\n  credentials: 'include'\n});\n\nexport const client = new ApolloClient({\n  cache: new InMemoryCache(),\n  link\n});","import React, { useState } from \"react\";\nimport './App.css';\nimport * as nav from \"./config\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport Layout from \"./components/Layout\";\nimport Main from \"./components/Main\";\nimport NoPage from \"./components/NoPage\";\nimport PasswordReset from \"./components/PasswordReset\";\nimport ForumSite from \"./components/forum/ForumSite\";\nimport ForumTopicList from \"./components/forum/ForumTopicList\";\nimport { ApolloProvider } from \"@apollo/client\";\nimport { client } from \"./lib/apolloClient\";\nimport { AuthProvider } from \"./hooks/useAuth\";\n\nfunction App() {\n  const currentUrl = window.location.href;\n\n  const [categoryId, setCategoryId] = useState();\n  const [categoryName, setCategoryName] = useState();\n\n  return (\n    <ApolloProvider client={client}>\n      <AuthProvider>\n        <BrowserRouter>\n          <Routes>\n            <Route path={nav.WP_ROOT} element={<Layout />}>\n              <Route index element={<Main />} />\n              <Route path=\"set-password\" element={<PasswordReset currentUrl={currentUrl} />} />\n              <Route path=\"forum\" element={\n                <ForumSite\n                  setCategoryId={setCategoryId}\n                  setCategoryName={setCategoryName}\n                />}\n              />\n              <Route path=\"forum/threads\" element={\n                <ForumTopicList\n                  categoryId={categoryId}\n                  categoryName={categoryName}\n                />}\n              />\n              <Route path=\"*\" element={<NoPage />} />\n            </Route>\n          </Routes>\n        </BrowserRouter>\n      </AuthProvider>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { configureStore } from '@reduxjs/toolkit';\nimport { Provider } from 'react-redux';\nimport modalReducer from './features/ModalSlice';\nimport contentReducer from './features/ContentSlice';\nimport forumReducer from './features/ForumSlice';\n\nconst store = configureStore({\n  reducer: {\n    modal: modalReducer,\n    content: contentReducer,\n    forum: forumReducer\n  }\n});\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\n\nroot.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}