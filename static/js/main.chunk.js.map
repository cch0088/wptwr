{"version":3,"file":"static/js/main.chunk.js","sources":["/opt/lampp/htdocs/WordPress/wp-content/themes/wptwr/react-src/src/App.css","/opt/lampp/htdocs/WordPress/wp-content/themes/wptwr/react-src/src/App.js","/opt/lampp/htdocs/WordPress/wp-content/themes/wptwr/react-src/src/components/Footer.jsx","/opt/lampp/htdocs/WordPress/wp-content/themes/wptwr/react-src/src/components/Header.jsx","/opt/lampp/htdocs/WordPress/wp-content/themes/wptwr/react-src/src/components/Layout.jsx","/opt/lampp/htdocs/WordPress/wp-content/themes/wptwr/react-src/src/components/Main.jsx","/opt/lampp/htdocs/WordPress/wp-content/themes/wptwr/react-src/src/components/MainMenu.jsx","/opt/lampp/htdocs/WordPress/wp-content/themes/wptwr/react-src/src/components/Modal.jsx","/opt/lampp/htdocs/WordPress/wp-content/themes/wptwr/react-src/src/components/NoPage.jsx","/opt/lampp/htdocs/WordPress/wp-content/themes/wptwr/react-src/src/components/PasswordReset.jsx","/opt/lampp/htdocs/WordPress/wp-content/themes/wptwr/react-src/src/components/UserControl.jsx","/opt/lampp/htdocs/WordPress/wp-content/themes/wptwr/react-src/src/components/forms/ConfirmForm.jsx","/opt/lampp/htdocs/WordPress/wp-content/themes/wptwr/react-src/src/components/forms/LoginForm.jsx","/opt/lampp/htdocs/WordPress/wp-content/themes/wptwr/react-src/src/components/forms/PasswordForm.jsx","/opt/lampp/htdocs/WordPress/wp-content/themes/wptwr/react-src/src/components/forms/RegisterForm.jsx","/opt/lampp/htdocs/WordPress/wp-content/themes/wptwr/react-src/src/components/forms/ResetByEmailForm.jsx","/opt/lampp/htdocs/WordPress/wp-content/themes/wptwr/react-src/src/components/forum/ForumPost.jsx","/opt/lampp/htdocs/WordPress/wp-content/themes/wptwr/react-src/src/components/forum/ForumSite.jsx","/opt/lampp/htdocs/WordPress/wp-content/themes/wptwr/react-src/src/components/forum/ForumTopicList.jsx","/opt/lampp/htdocs/WordPress/wp-content/themes/wptwr/react-src/src/config.js","/opt/lampp/htdocs/WordPress/wp-content/themes/wptwr/react-src/src/features/CategorySlice.jsx","/opt/lampp/htdocs/WordPress/wp-content/themes/wptwr/react-src/src/features/ContentSlice.jsx","/opt/lampp/htdocs/WordPress/wp-content/themes/wptwr/react-src/src/features/ForumSlice.jsx","/opt/lampp/htdocs/WordPress/wp-content/themes/wptwr/react-src/src/features/ModalSlice.jsx","/opt/lampp/htdocs/WordPress/wp-content/themes/wptwr/react-src/src/features/PageServices.jsx","/opt/lampp/htdocs/WordPress/wp-content/themes/wptwr/react-src/src/features/UserSlice.jsx","/opt/lampp/htdocs/WordPress/wp-content/themes/wptwr/react-src/src/hooks/useAuth.tsx","/opt/lampp/htdocs/WordPress/wp-content/themes/wptwr/react-src/src/index.js","/opt/lampp/htdocs/WordPress/wp-content/themes/wptwr/react-src/src/lib/apolloClient.tsx","/opt/lampp/htdocs/WordPress/wp-content/themes/wptwr/react-src/src/lib/validation.jsx","/opt/lampp/htdocs/WordPress/wp-content/themes/wptwr/react-src/src/logo.svg","/opt/lampp/htdocs/WordPress/wp-content/themes/wptwr/react-src/src/logotext.svg","/opt/lampp/htdocs/WordPress/wp-content/themes/wptwr/react-src/src/serviceWorker.js"],"sourcesContent":["// extracted by mini-css-extract-plugin","import React, { useState } from \"react\";\nimport './App.css';\nimport * as nav from \"./config\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport Layout from \"./components/Layout\";\nimport Main from \"./components/Main\";\nimport NoPage from \"./components/NoPage\";\nimport PasswordReset from \"./components/PasswordReset\";\nimport ForumSite from \"./components/forum/ForumSite\";\nimport ForumTopicList from \"./components/forum/ForumTopicList\";\nimport { ApolloProvider } from \"@apollo/client\";\nimport { client } from \"./lib/apolloClient\";\nimport { AuthProvider } from \"./hooks/useAuth\";\nimport ForumPost from \"./components/forum/ForumPost\";\n\nfunction App() {\n  const currentUrl = window.location.href;\n\n  const [postId, setPostId] = useState();\n\n  return (\n    <ApolloProvider client={client}>\n      <AuthProvider>\n        <BrowserRouter>\n          <Routes>\n            <Route path={nav.WP_ROOT} element={<Layout />}>\n              <Route index element={<Main />} />\n              <Route path=\"set-password\" element={<PasswordReset currentUrl={currentUrl} />} />\n              <Route path={nav.UI_FORUM} element={<ForumSite />} />\n              <Route path={nav.UI_FORUM_THREADS} element={<ForumTopicList setPostId={setPostId} />} />\n              <Route path={nav.UI_FORUM_POST} element={<ForumPost postId={postId} />} />\n              <Route path=\"*\" element={<NoPage />} />\n            </Route>\n          </Routes>\n        </BrowserRouter>\n      </AuthProvider>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport logo from '../logo.svg';\nimport logotext from '../logotext.svg';\n\nfunction Footer() {\n\nreturn (\n        <div className=\"footer-row\">\n            <div id=\"logo-footer\"><img src={logo} alt=\"Logo\" /></div>\n            <div id=\"logotext-footer\"><img src={logotext} alt=\"Logo Text\" /></div>\n            <div className=\"footer-about\"><span className=\"footer-span\">A privacy focused travel community site.</span></div>\n            <a className=\"footer-button\" href=\"contact-page\">Contact</a>\n        </div>\n    )\n}\nexport default Footer;\n","import React from \"react\";\nimport logo from '../logo.svg';\nimport logotext from '../logotext.svg';\nimport { useNavigate } from \"react-router-dom\";\nimport { getRoot } from \"../lib/validation\";\nimport { WP_ROOT } from \"../config\";\n\nfunction Header() {\n    const navigate = useNavigate();\n\nreturn (\n    <div id=\"branding\" onClick={() => { navigate(getRoot(WP_ROOT)) }}>\n        <div id=\"logo\"><img src={logo} alt=\"Logo\" /></div>\n        <div id=\"logotext\"><img src={logotext} alt=\"Logo Text\" /></div>\n    </div>\n    )\n}\nexport default Header;\n","import React from \"react\";\nimport Header from \"./Header\";\nimport UserControl from \"./UserControl\";\nimport { Outlet } from \"react-router-dom\";\nimport Footer from \"./Footer\";\n\nconst Layout = () => {\nreturn (\n        <>\n            <div id=\"head-wrap\">\n                <div id=\"head-container\">\n                    <Header />\n                    <UserControl />\n                </div>\n            </div>\n            <div id=\"content-wrap\">\n                <Outlet />\n            </div>\n            <div id=\"footer-wrap\">\n                <Footer />\n            </div>\n        </>\n    )\n};\n\nexport default Layout;\n","import React from \"react\";\nimport MainMenu from \"./MainMenu\"\nimport { API_PAGES } from \"../config\";\n\nfunction Main() {\n    const menuRoute = API_PAGES + \"main-menu\";\n\n    return (\n        <div>\n            <div id=\"heading-container\"><h2>Website is under construction</h2></div>\n            <MainMenu route={menuRoute} />\n        </div>\n        )\n}\nexport default Main;\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getContent } from \"../features/PageServices\";\nimport { pushContent } from \"../features/ContentSlice\";\nimport { WP_UPLOADS } from \"../config\";\n\nfunction MainMenu({route}) {\n\n    const dispatch = useDispatch();\n    const menu = useSelector(state => state.content.value);\n\n    useEffect(() => {\n        getContent(route).then(object => {\n            dispatch(pushContent(object));\n        });\n    },[dispatch, route]);\n\n    const regex = /(<([^>]+)>)/gi;\n\n    const menuData = menu[0]\n        .content\n        .rendered\n        .replace(regex, '')\n        .split(/\\s+/)\n        .filter((i) => (i !== ''));\n\n    return (\n        <div id=\"card-container\">\n            {menuData.map((str, i) => {\n                const [name, link, image] = str.split(':');\n                return (<a key={i} href={link} className=\"card\">\n                    <img className=\"card-photo\" alt={name} src={`${WP_UPLOADS}/${image}`} />\n                    <div className=\"card-text\">{name}</div>\n                </a>);\n            })}\n        </div>\n    )\n}\n\nexport default MainMenu;\n","import React from 'react';\n\nimport { closeModal } from '../features/ModalSlice';\nimport { useDispatch } from 'react-redux';\n\nfunction Modal({children}) \n{\n    const dispatch = useDispatch();\n\n    const handleClose = (e) => {\n        if (e.target.className === \"modal-bg\") { dispatch(closeModal()); }\n    };\n\n    return (\n        <div className=\"modal-bg\" onClick={(e) => handleClose(e)}>\n            <section className=\"modal-main\">\n                {children}\n            </section>\n        </div>);\n};\n\nexport default Modal;\n","import React from \"react\";\n\nfunction NoPage() {\n    return (<div className=\"slide\">Resource not found</div>);\n}\nexport default NoPage;\n","import React, { useEffect, useState } from \"react\";\nimport { WP_ROOT } from \"../config\";\nimport { useNavigate } from \"react-router-dom\";\nimport { getRoot } from \"../lib/validation\";\nimport Modal from \"./Modal\";\nimport PasswordForm from \"./forms/PasswordForm\";\n\nfunction PasswordReset({currentUrl}) {\n    const navigate = useNavigate();\n\n    const [key, setKey] = useState();\n    const [user, setUser] = useState();\n\n    useEffect(() => {\n        if (currentUrl && currentUrl.includes('set-password')) {\n            const searchUrl = new URLSearchParams(currentUrl);\n            const values = [];\n            searchUrl.forEach((x) => values.push(x));\n            setKey(values[0]);\n            setUser(values[1]);\n        } else {\n            navigate(getRoot(WP_ROOT));\n        }\n    },[currentUrl, navigate]);\n\n    return (\n            <Modal children={ <PasswordForm pkey={key} login={user} /> } />\n        )\n}\nexport default PasswordReset;\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { openModal } from '../features/ModalSlice';\nimport Modal from './Modal';\nimport LoginForm from './forms/LoginForm';\nimport useAuth, { GET_USER } from '../hooks/useAuth';\nimport { gql, useMutation } from '@apollo/client';\nimport { UI_ACCOUNT } from '../config';\nimport RegisterForm from './forms/RegisterForm';\nimport ConfirmForm from './forms/ConfirmForm';\nimport ResetByEmailForm from './forms/ResetByEmailForm';\n\nfunction UserControl() {\n\n    const modal = useSelector(state => state.modal.value);\n    const [form, setForm] = useState(0);\n\n    const dispatch = useDispatch();\n    const {loggedIn, loading} = useAuth();\n\n    const LOG_OUT = gql`\n        mutation logOut {\n            logout(input: {})\n            { status }\n        }`;\n\n    const [logOut] = useMutation(LOG_OUT, {\n        refetchQueries: [\n            { query: GET_USER }\n        ],\n    });\n\n    const openForm = (i) => {\n        setForm(i);\n        dispatch(openModal());\n    }\n\nreturn (\n        <div id=\"usercontrol\">\n            { form === 0 && modal.show && <Modal children={ <ConfirmForm /> }/> }\n            { form === 1 && modal.show && <Modal children={ <LoginForm setForm={setForm} /> }/> }\n            { form === 2 && modal.show && <Modal children={ <RegisterForm setForm={setForm} /> }/> }\n            { form === 3 && modal.show && <Modal children={ <ResetByEmailForm setForm={setForm} /> }/> }\n            {\n                (!loggedIn && !loading) &&\n                <>\n                    <span className=\"userbutton\" onClick={() => { openForm(2) }}>\n                        <span role=\"img\" aria-label=\"new\">🆕</span> Sign Up\n                    </span>\n                    <span className=\"userbutton\" onClick={() => { openForm(1) }}>\n                        <span role=\"img\" aria-label=\"head\">👤</span> Log In\n                    </span>\n                </>\n            }\n            {\n                (loggedIn && !loading) &&\n                <>\n                    <a className=\"userbutton\" href={UI_ACCOUNT}>\n                        <span role=\"img\" aria-label=\"head\">👤</span> Account\n                    </a>\n                    <span className=\"userbutton\" onClick={() => { logOut() }}>\n                        <span role=\"img\" aria-label=\"door\">🚪</span> Log Out\n                    </span>\n                </>\n            }\n            {\n                (loading) &&\n                <>\n                    <span className=\"userbutton\">\n                        <span role=\"img\" aria-label=\"hourglass\">⏳</span> Loading...\n                    </span>\n                </>\n            }\n        </div>\n    )\n}\nexport default UserControl;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { closeModal } from '../../features/ModalSlice';\n\nfunction ConfirmForm() {\n\n    const dispatch = useDispatch();\n\n    return (<form id=\"site-form\">\n    <div className=\"label-login\">Please check your e-mail for next steps.</div>\n\n    <input className=\"button\"\n        type=\"button\"\n        name=\"ok\"\n        value=\"OK\"\n        onClick={() => { dispatch(closeModal()) }}\n    />\n    </form>)\n}\n\nexport default ConfirmForm;\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useMutation, gql } from '@apollo/client';\nimport { GET_USER } from '../../hooks/useAuth';\nimport { closeModal } from '../../features/ModalSlice';\n\nfunction LoginForm({setForm}) {\n\n    const dispatch = useDispatch();\n\n    const [message, setMessage] = useState(null);\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n\n    const LOG_IN = gql`\n        mutation logIn($login: String!, $password: String!) {\n        loginWithCookies(input: { login: $login password: $password })\n        { status } }`;\n\n    const [logIn, { loading }] = useMutation(LOG_IN, {\n        refetchQueries: [\n        { query: GET_USER }\n        ],\n    });\n\n    function handleLogin(e) {\n        e.preventDefault();\n\n        if (username.length > 0 && password.length > 0) {\n            logIn({\n            variables: {\n                login: username,\n                password,\n            }\n            })\n            .then((_status) => dispatch(closeModal()))\n            .catch((_error) => setMessage('Invalid username or password!'));\n        } else {\n            setMessage('Missing username or password.');\n        }\n    }\n\nreturn (<form id=\"site-form\">\n        <div className=\"title-label\">SIGN IN</div>\n\n        {(message) ? <div className='error-label'>{message}</div> : null}\n\n        <div className=\"label-login\">Username</div>\n\n        <input className=\"field-login\"\n            type=\"text\"\n            name=\"username\"\n            value={username}\n            onChange={(e) => { setUsername(e.target.value); }}\n        />\n\n        <div className=\"label-login\">Password</div>\n\n        <input className=\"field-login\"\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={(e) => { setPassword(e.target.value); }}\n        />\n\n        <span className=\"link-label\" onClick={() => { setForm(3) }}>Forgot Password</span>\n\n        <input className=\"button\"\n            type=\"submit\"\n            name=\"login\"\n            value=\"Sign In\"\n            onClick={(e) => { handleLogin(e); }}\n            disabled={loading}\n        />\n\n        <span className=\"link-label\" onClick={() => { setForm(2) }}>Create Account</span>\n    </form>)\n}\n\nexport default LoginForm;\n","import React, { useState } from 'react';\nimport PasswordStrengthBar from 'react-password-strength-bar';\nimport { useMutation, gql } from '@apollo/client';\nimport { getRoot, validatePassword } from '../../lib/validation';\nimport { useNavigate } from 'react-router-dom';\nimport { WP_ROOT } from '../../config';\n\nfunction PasswordForm({pkey, login}) {\n    const navigate = useNavigate();\n\n    const [message, setMessage] = useState(null);\n    const [password, setPassword] = useState('');\n    const [passwordConfirm, setPasswordConfirm] = useState('');\n\n    const RESET_PASSWORD = gql`\n        mutation resetUserPassword(\n            $key: String!\n            $login: String!\n            $password: String!\n        ) {\n            resetUserPassword(\n            input: {\n                key: $key\n                login: $login\n                password: $password\n            }\n            ) {\n            user {\n                databaseId\n            }\n            }\n        }`;\n\n    const [resetPassword, { loading }] = useMutation(RESET_PASSWORD);\n\n    function handleSubmit(e) {\n        e.preventDefault();\n\n        if (password.length > 0 && validatePassword(password, passwordConfirm)) {\n            resetPassword({\n                variables: {\n                  key: pkey,\n                  login,\n                  password,\n                },\n              })\n            .then((_status) => navigate(getRoot(WP_ROOT)))\n            .catch((_error) => setMessage('Error resetting password.'));\n        } else if (!validatePassword(password, passwordConfirm)) {\n            setMessage('Passwords do not match.');\n        } else {\n            setMessage('Check that all fields are filled.');\n        }\n    }\n\n    return (<form id=\"site-form\">\n        <div className=\"title-label\">PASSWORD RESET</div>\n\n        {(message) ? <div className='error-label'>{message}</div> : null}\n\n        <div className=\"label-login\">New password for {login}</div>\n\n        <div className=\"label-login\">Password</div>\n\n        <input className=\"field-login\"\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={(e) => { setPassword(e.target.value); }}\n        />\n\n        <div className=\"label-login\">Confirm Password</div>\n\n        <input className=\"field-login\"\n            type=\"password\"\n            name=\"password\"\n            value={passwordConfirm}\n            onChange={(e) => { setPasswordConfirm(e.target.value); }}\n        />\n\n        <PasswordStrengthBar\n            className=\"password-bar\"\n            password={password}\n            scoreWords={[\n                'Weak',\n                'Acceptable',\n                'Good',\n                'Strong',\n                'Excellent'\n            ]}\n            shortScoreWord='Weak'\n        />\n\n        <input className=\"button\"\n            type=\"submit\"\n            name=\"reset\"\n            value=\"Reset\"\n            onClick={(e) => { handleSubmit(e); }}\n            disabled={loading}\n        />\n\n        <span className=\"link-label\" onClick={() => { navigate(getRoot(WP_ROOT)) }}>Cancel</span>\n    </form>)\n}\n\nexport default PasswordForm;\n","import React, { useState } from 'react';\nimport PasswordStrengthBar from 'react-password-strength-bar';\nimport { useMutation, gql } from '@apollo/client';\nimport { validateEmail } from '../../lib/validation';\n\nfunction RegisterForm({setForm}) {\n\n    const [message, setMessage] = useState(null);\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [isHuman, setIsHuman] = useState(false);\n    const [email, setEmail] = useState('');\n\n    const REGISTER_USER = gql`\n        mutation registerUser(\n            $username: String!\n            $email: String!\n            $password: String!\n        ) {\n            registerUser(\n                input: {\n                username: $username\n                email: $email\n                password: $password\n                }\n            ) { user { databaseId } }\n        }`;\n\n    const [register, { loading }] = useMutation(REGISTER_USER);\n\n    function handleSubmit(e) {\n        e.preventDefault();\n\n        if (isHuman && username.length > 0 && password.length > 0 && validateEmail(email)) {\n            register({\n            variables: {\n                username,\n                email,\n                password\n            }\n            })\n            .then((_status) => setForm(0))\n            .catch((_error) => setMessage('Username or e-mail already taken.'));\n        } else if (!validateEmail(email)) {\n            setMessage('Invalid e-mail provided.');\n        } else {\n            setMessage('Check that all fields are filled.');\n        }\n    }\n\nreturn (<form id=\"site-form\">\n        <div className=\"title-label\">SIGN UP</div>\n\n        {(message) ? <div className='error-label'>{message}</div> : null}\n\n        <div className=\"label-login\">Username</div>\n\n        <input className=\"field-login\" \n            type=\"text\"\n            name=\"username\"\n            value={username}\n            onChange={(e) => { setUsername(e.target.value); }}\n        />\n\n        <div className=\"label-login\">E-mail</div>\n\n        <input className=\"field-login\" \n            type=\"email\"\n            name=\"email\"\n            value={email}\n            onChange={(e) => { setEmail(e.target.value); }}\n        />\n\n        <div className=\"label-login\">Password</div>\n\n        <input className=\"field-login\"\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={(e) => { setPassword(e.target.value); }}\n        />\n\n        <PasswordStrengthBar\n            className=\"password-bar\"\n            password={password}\n            scoreWords={[\n                'Weak',\n                'Acceptable',\n                'Good',\n                'Strong',\n                'Excellent'\n            ]}\n            shortScoreWord='Weak'\n        />\n\n        <div className=\"label-login\">I'm not a bot</div>\n\n        <input className=\"human-check\"\n            type=\"checkbox\"\n            name=\"human\"\n            value=\"human\"\n            onChange={(e) => setIsHuman(e.target.checked)}\n        />\n\n        <input className=\"button\"\n            type=\"submit\"\n            name=\"register\"\n            value=\"Sign Up\"\n            disabled={!isHuman || loading}\n            onClick={(e) => { handleSubmit(e); }}\n        />\n    </form>)\n}\n\nexport default RegisterForm;\n","import React, { useState } from 'react';\nimport { useMutation, gql } from '@apollo/client';\nimport { validateEmail } from '../../lib/validation';\n\nfunction ResetByEmailForm({setForm}) {\n\n    const [message, setMessage] = useState(null);\n    const [email, setEmail] = useState('');\n    const [isHuman, setIsHuman] = useState(false);\n\n    const SEND_PASSWORD_RESET_EMAIL = gql`\n        mutation sendPasswordResetEmail($username: String!) {\n        sendPasswordResetEmail(\n            input: { username: $username }\n        ) { user { databaseId } } }`;\n\n    const [sendPasswordResetEmail, { loading }] = useMutation(\n        SEND_PASSWORD_RESET_EMAIL\n    );\n\n    function handleSubmit(e) {\n        e.preventDefault();\n\n        if (validateEmail(email)) {\n            sendPasswordResetEmail({\n                variables: {\n                  username: email,\n                }\n            })\n            .then((_status) => setForm(0))\n            .catch((_error) => setMessage('E-mail could not be sent.'));\n        } else if (!validateEmail(email)) {\n            setMessage('Invalid e-mail provided.');\n        } else {\n            setMessage('Check that all fields are filled.');\n        }\n    }\n\n    return (<form id=\"site-form\">\n        <div className=\"title-label\">PASSWORD RESET</div>\n\n        {(message) ? <div className='error-label'>{message}</div> : null}\n\n        <div className=\"label-login\">E-mail</div>\n\n        <input className=\"field-login\" \n            type=\"email\"\n            name=\"email\"\n            value={email}\n            onChange={(e) => { setEmail(e.target.value); }}\n        />\n\n        <div className=\"label-login\">I'm not a bot</div>\n\n        <input className=\"human-check\"\n            type=\"checkbox\"\n            name=\"human\"\n            value=\"human\"\n            onChange={(e) => setIsHuman(e.target.checked)}\n        />\n\n        <input className=\"button\"\n            type=\"submit\"\n            name=\"send\"\n            value=\"Request\"\n            onClick={(e) => { handleSubmit(e); }}\n            disabled={!isHuman || loading}\n        />\n    </form>)\n}\n\nexport default ResetByEmailForm;\n","import React, { useEffect, useState } from \"react\";\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport { gql, useMutation, useQuery } from \"@apollo/client\";\nimport { getDateFromString } from \"../../lib/validation\";\nimport { useNavigate } from \"react-router-dom\";\nimport { UI_FORUM } from \"../../config\";\n\nfunction ForumPost({postId}) {\n\n    const FORUM_POST = gql`\n        query getPostById($postId: Int!) {\n            posts(where: {id: $postId}) {\n            nodes {\n                databaseId\n                title\n                content\n                author { node {\n                    name\n                    avatar { url } } }\n                date\n                comments(where: {orderby: COMMENT_DATE, order: ASC}) {\n                edges { node {\n                    databaseId\n                    content\n                    date\n                    author { node {\n                        name\n                        avatar { url } } } } } } } } }`;\n\n    const FORUM_REPLY = gql`\n        mutation AddReply($commentOn: Int!, $content: String!) {\n            createComment(input: {\n                    content: $content,\n                    commentOn: $commentOn\n            })\n            {\n                clientMutationId\n                success\n            }\n        }`;\n\n    const [replyOpen, setReplyOpen] = useState(0);\n    const [content, setContent] = useState('');\n\n    const { loading, error, data } = useQuery(FORUM_POST,\n        { variables: { postId } });\n    \n    const [sendReply] = useMutation(FORUM_REPLY);\n\n    const renderHTML = (content) => {\n        return { __html: content };\n    };\n\n    const navigate = useNavigate();\n\n    const submitReply = () => {\n        sendReply({\n            variables: {\n                commentOn: postId,\n                content,\n            }\n        }).then(setReplyOpen(0));\n    }\n\n    useEffect(() => {\n        if (error) {\n            navigate(UI_FORUM);\n        }\n    },[error, navigate])\n\n    return (\n            <div className=\"forum-list-container\">\n                {loading && (\n                    <div className=\"forum-section\">\n                        <div>Loading...</div>\n                    </div>\n                )}\n                {!loading && !error && (\n                <>\n                    <div className=\"forum-section\">\n                        <div className=\"forum-category\">{data.posts.nodes[0].title}</div>\n                        <div className=\"forum-post\">\n                            <div className=\"forum-post-info\">{data.posts.nodes[0].author.node.name} on {getDateFromString(data.posts.nodes[0].date)}</div>\n                            <div dangerouslySetInnerHTML={renderHTML(data.posts.nodes[0].content)} />\n                        </div>\n                        {data.posts.nodes[0].comments.edges.map((post) => (\n                            <div key={post.node.databaseId} className=\"forum-post\">\n                                <div className=\"forum-post-info\">{post.node.author.node.name} on {getDateFromString(post.node.date)}</div>\n                                <div dangerouslySetInnerHTML={renderHTML(post.node.content)} />\n                            </div>\n                        ))}\n                    </div>\n                    {\n                        replyOpen === 0\n                        ? <button className=\"forum-button\" onClick={() => setReplyOpen(1)}>Add reply</button>\n                        :\n                        <>\n                            <div id=\"text-editor-container\">\n                                <ReactQuill\n                                    theme=\"snow\"\n                                    value={content}\n                                    onChange={setContent}\n                                />\n                            </div>\n                            <button className=\"forum-button\" onClick={() => submitReply()}>Add reply</button>\n                        </>\n                    }\n                </>\n                )}\n            </div>\n    );\n}\n\nexport default ForumPost;\n","import React, { useEffect } from \"react\";\nimport { API_CATEGORIES } from \"../../config\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getContent } from \"../../features/PageServices\";\nimport { pushForumContent } from \"../../features/ForumSlice\";\nimport { useNavigate } from \"react-router-dom\";\nimport { setCategory } from \"../../features/CategorySlice\";\nimport { UI_FORUM_THREADS } from \"../../config\";\n\nfunction ForumSite() {\n    const route = API_CATEGORIES;\n\n    const dispatch = useDispatch();\n    const categories = useSelector(state => state.forum.value);\n\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        getContent(route).then(object => {\n            dispatch(pushForumContent(object));\n        });\n    },[dispatch, route]);\n\n    const heading = [];\n    const topic = [];\n\n    categories.forEach(item => {\n        if (item.parent > 0) {\n            topic.push({\n                id: item.id,\n                name: item.name,\n                description: item.description,\n                link: item.link,\n                parent: item.parent\n            })\n        }\n        else {\n            heading.push({\n                id: item.id,\n                name: item.description\n            })\n        }\n    })\n\n    const handleNavigation = (categoryId, categoryName) => {\n        dispatch(setCategory({categoryId, categoryName}));\n        navigate(UI_FORUM_THREADS);\n    };\n\n    return (\n        <div className=\"forum-list-container\">\n            {heading.map((header) => {\n                return (\n                    <div className=\"forum-section\" key={header.id}>\n                        <div className=\"forum-category\">{header.name}</div>\n                        {topic.filter((item) => item.parent === header.id)\n                            .map((i) => {\n                                return (\n                                    <div key={i.id}\n                                        className=\"forum-topic\"\n                                        onClick={() => handleNavigation(i.id, i.name)}\n                                    >\n                                        <span className=\"bubble\" role=\"img\" aria-label=\"topic\">🗨️</span>\n                                        <div className=\"forum-topic-node\">\n                                            <div className=\"forum-topic-name\">{i.name}</div>\n                                            <div className=\"forum-topic-description\">{i.description}</div>\n                                        </div>\n                                    </div>\n                                );\n                            }\n                        )}\n                    </div>\n                );\n            })}\n        </div>\n    );\n}\nexport default ForumSite;\n","import React, { useEffect, useState } from 'react';\nimport { useQuery, gql } from '@apollo/client';\nimport { getDateFromString } from '../../lib/validation';\nimport { useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { UI_FORUM, UI_FORUM_POST } from '../../config';\n\nfunction ForumTopicList({setPostId}) {\n\n    const category = useSelector(state => state.category.value);\n    const navigate = useNavigate();\n\n    const [topics, setTopics] = useState([]);\n    const [heading, setHeading] = useState(category.categoryName);\n\n    const TOPIC_LIST = gql`\n        query getPostsByCategory(\n                $categoryId: Int!\n            )\n        {\n            posts(where: {categoryId: $categoryId}) {\n                nodes {\n                    postId\n                    title\n                    date\n                    author { node { name } }\n                    isSticky\n                    editingLockedBy { node { name } }\n                }\n            }\n        }`;\n\n    const { loading, error, data } = useQuery(TOPIC_LIST,\n        { variables: { categoryId: category.categoryId } });\n\n    useEffect(() => {\n        if (loading) {\n            setHeading('Loading...');\n        } else if (error) {\n            navigate(UI_FORUM);\n        } else if (data.posts.nodes[0]) {\n            setHeading(null);\n            setTopics(data.posts.nodes);\n        } else {\n            setHeading('Nothing to show here. Feel free to add a topic.');\n        }\n    },[loading, error, data, navigate])\n\n    const handleNavigation = (postId) => {\n        setPostId(postId);\n        navigate(UI_FORUM_POST);\n    }\n\n    return (\n        <div className=\"forum-list-container\">\n            <div className=\"forum-section\">\n                <div className=\"forum-category\">{category.categoryName}</div>\n                <div>{heading}</div>\n                {topics.map((topic) => (\n                    <div key={topic.postId}\n                        id={topic.postId}\n                        className=\"forum-topic\"\n                        onClick={() => handleNavigation(topic.postId)}\n                    >\n                        <span className=\"bubble\" role=\"img\" aria-label=\"topic\">🗨️</span>\n                        <div className=\"forum-topic-node\">\n                            <div className=\"forum-topic-name\">{topic.title}</div>\n                            <div className=\"forum-topic-description\">\n                                By {topic.author.node.name} on {getDateFromString(topic.date)}\n                            </div>\n                        </div>\n                    </div>\n                ))}\n            </div>\n            {!error && !loading && <button className=\"forum-button\">New topic</button>}\n        </div>\n    );\n}\n\nexport default ForumTopicList;\n","import { getRoot } from \"./lib/validation\";\n\n// Use forward slash (/) if root is same as site\nexport const WP_ROOT = \"WordPress\";\n\n// GraphQL defaults\nexport const GRAPHQL_URI = getRoot(WP_ROOT) + \"graphql\";\n\n// WordPress defaults\nexport const WP_UPLOADS = getRoot(WP_ROOT) + \"wp-content/uploads\";\nexport const API_PAGES = getRoot(WP_ROOT) + \"wp-json/wp/v2/pages/?slug=\";\nexport const API_POSTS = getRoot(WP_ROOT) + \"wp-json/wp/v2/posts/\";\nexport const API_USERS = getRoot(WP_ROOT) + \"wp-json/wp/v2/users/\";\nexport const API_CATEGORIES = getRoot(WP_ROOT) + \"wp-json/wp/v2/categories\";\n\n// User accounts page\nexport const UI_ACCOUNT = \"wp-admin\";\n\n// Forum pages\nexport const UI_FORUM = getRoot(WP_ROOT) + \"forum\";\nexport const UI_FORUM_THREADS = getRoot(WP_ROOT) + \"forum/threads\";\nexport const UI_FORUM_POST = getRoot(WP_ROOT) + \"forum/threads/post\";\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst closedState = { categoryId: null, categoryName: null };\n\nexport const categorySlice = createSlice({\n    name: 'category',\n    initialState: { value: closedState },\n    reducers: {\n       setCategory: (state, action) => {\n        state.value = action.payload;\n       },\n       purgeCategory: (state) => {\n        state.value = closedState;\n       }\n    }\n});\n\nexport const { setCategory, purgeCategory } = categorySlice.actions;\n\nexport default categorySlice.reducer;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialStateValue = [{\n    \"id\": 0,\n    \"date\": null,\n    \"date_gmt\": null,\n    \"guid\": {\n        \"rendered\": \"\"\n    },\n    \"modified\": null,\n    \"modified_gmt\": null,\n    \"slug\": null,\n    \"status\": null,\n    \"type\": null,\n    \"link\": null,\n    \"title\": {\n        \"rendered\": \"\"\n    },\n    \"content\": {\n        \"rendered\": \"\",\n        \"protected\": false\n    },\n    \"excerpt\": {\n        \"rendered\": \"\",\n        \"protected\": false\n    },\n    \"author\": 0,\n    \"featured_media\": 0,\n    \"parent\": 0,\n    \"menu_order\": 0,\n    \"comment_status\": \"closed\",\n    \"ping_status\": \"closed\",\n    \"template\": \"\",\n    \"meta\": {\n        \"footnotes\": \"\"\n    },\n    \"_links\": {\n        \"self\": [],\n        \"collection\": [],\n        \"about\": [],\n        \"author\": [],\n        \"replies\": [],\n        \"version-history\": [],\n        \"predecessor-version\": [],\n        \"wp:attachment\": [],\n        \"curies\": [{\n            \"name\": \"wp\",\n            \"href\": \"https://api.w.org/{rel}\",\n            \"templated\": true\n        }]\n    }\n}];\n\nexport const contentSlice = createSlice({\n    name: 'content',\n    initialState: { value: initialStateValue },\n    reducers: {\n       pushContent: (state, action) => {\n        state.value = action.payload;\n       },\n       purgeContent: (state) => {\n        state.value = initialStateValue;\n       } \n    }\n});\n\nexport const { pushContent, purgeContent } = contentSlice.actions;\n\nexport default contentSlice.reducer;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialStateValue = [\n  {\n    \"id\": 1,\n    \"count\": 1,\n    \"description\": \"\",\n    \"link\": \"https://localhost/WordPress/category/uncategorized/\",\n    \"name\": \"Uncategorized\",\n    \"slug\": \"uncategorized\",\n    \"taxonomy\": \"category\",\n    \"parent\": 0,\n    \"meta\": [],\n    \"_links\": {\n      \"self\": [\n        {\n          \"href\": \"https://localhost/WordPress/wp-json/wp/v2/categories/1\"\n        }\n      ],\n      \"collection\": [\n        {\n          \"href\": \"https://localhost/WordPress/wp-json/wp/v2/categories\"\n        }\n      ],\n      \"about\": [\n        {\n          \"href\": \"https://localhost/WordPress/wp-json/wp/v2/taxonomies/category\"\n        }\n      ],\n      \"wp:post_type\": [\n        {\n          \"href\": \"https://localhost/WordPress/wp-json/wp/v2/posts?categories=1\"\n        }\n      ],\n      \"curies\": [\n        {\n          \"name\": \"wp\",\n          \"href\": \"https://api.w.org/{rel}\",\n          \"templated\": true\n        }\n      ]\n    }\n  }\n];\n\nexport const forumSlice = createSlice({\n    name: 'forumContent',\n    initialState: { value: initialStateValue },\n    reducers: {\n       pushForumContent: (state, action) => {\n        state.value = action.payload;\n       },\n       purgeForumContent: (state) => {\n        state.value = initialStateValue;\n       } \n    }\n});\n\nexport const { pushForumContent, purgeForumContent } = forumSlice.actions;\n\nexport default forumSlice.reducer;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst openState = { show: true };\nconst closedState = { show: false };\n\nexport const modalSlice = createSlice({\n    name: 'modal',\n    initialState: { value: closedState },\n    reducers: {\n       openModal: (state) => {\n        state.value = openState;\n       },\n       closeModal: (state) => {\n        state.value = closedState;\n       }\n    }\n});\n\nexport const { openModal, closeModal } = modalSlice.actions;\n\nexport default modalSlice.reducer;\n","function PageServices() {}\nexport default PageServices;\n\nexport async function getContent(fromUrl) {\n    try {\n        const response = await fetch(fromUrl);\n        const data = await response.json();\n        return data;\n    }\n    catch {\n        return {\"message\": \"Access Error\"};\n    }\n};\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialStateValue = [{\n  \"id\": 0,\n  \"name\": null,\n  \"url\": null,\n  \"description\": null,\n  \"link\": null,\n  \"slug\": null,\n  \"avatar_urls\": {},\n  \"meta\": [],\n  \"_links\": {\n    \"self\": [],\n    \"collection\": []\n  }\n}];\n\nexport const userSlice = createSlice({\n    name: 'userDetails',\n    initialState: { value: initialStateValue },\n    reducers: {\n       pushUserDetails: (state, action) => {\n        state.value = action.payload;\n       },\n       purgeUserDetails: (state) => {\n        state.value = initialStateValue;\n       }\n    }\n});\n\nexport const { pushUserDetails, purgeUserDetails } = userSlice.actions;\n\nexport default userSlice.reducer;\n","import { useQuery, gql, ApolloError } from \"@apollo/client\";\nimport React, { createContext, useContext, ReactNode } from \"react\";\n\nexport interface User {\n  id: string;\n  databaseId: number;\n  firstName: string;\n  lastName: string;\n  email: string;\n  capabilities: string[];\n}\n\ninterface AuthData {\n  loggedIn: boolean;\n  user?: User,\n  loading: boolean;\n  error?: ApolloError;\n}\n\nconst DEFAULT_STATE: AuthData = {\n  loggedIn: false,\n  user: undefined,\n  loading: false,\n  error: undefined,\n};\n\nconst AuthContext = createContext(DEFAULT_STATE);\n\nexport const GET_USER = gql`\n  query getUser {\n    viewer {\n      id\n      databaseId\n      firstName\n      lastName\n      email\n      capabilities\n    }\n  }\n`;\n\nexport function AuthProvider({ children }: { children: ReactNode }) {\n  const { data, loading, error } = useQuery(GET_USER);\n  const user = data?.viewer;\n  const loggedIn = Boolean(user);\n\n  const value = {\n    loggedIn,\n    user,\n    loading,\n    error,\n  };\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>\n}\n\nconst useAuth = () => useContext(AuthContext);\n\nexport default useAuth;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { configureStore } from '@reduxjs/toolkit';\nimport { Provider } from 'react-redux';\nimport modalReducer from './features/ModalSlice';\nimport contentReducer from './features/ContentSlice';\nimport forumReducer from './features/ForumSlice';\nimport categoryReducer from './features/CategorySlice';\nimport userReducer from './features/UserSlice';\n\nconst store = configureStore({\n  reducer: {\n    modal: modalReducer,\n    content: contentReducer,\n    forum: forumReducer,\n    category: categoryReducer,\n    user: userReducer\n  }\n});\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\n\nroot.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { ApolloClient, InMemoryCache, createHttpLink } from \"@apollo/client\";\nimport { GRAPHQL_URI } from \"../config\";\n\nconst link = createHttpLink({\n  uri: GRAPHQL_URI,\n  credentials: 'include'\n});\n\nexport const client = new ApolloClient({\n  cache: new InMemoryCache(),\n  link\n});","export const validateEmail = (email) => {\n    // eslint-disable-next-line\n    const regex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return regex.test(email);\n}\n\nexport const validatePassword = (password1, password2) => {\n    return password1 === password2;\n}\n\nexport const getRoot = (wp_root_const) => {\n    if (wp_root_const !== '/') {\n        return (`/${wp_root_const}/`);\n    } else {\n        return wp_root_const;\n    }\n}\n\nexport const getDateFromString = (date) => {\n    const formatted = Intl.DateTimeFormat(\"en-US\", {\n        year: \"numeric\",\n        day: \"2-digit\",\n        month: \"long\",\n        hour: \"2-digit\",\n        minute: \"2-digit\"\n      }).format(new Date(date));\n    return formatted;\n}\n","module.exports = __webpack_public_path__ + \"static/media/logo.e9286273.svg\";","module.exports = __webpack_public_path__ + \"static/media/logotext.1ad91849.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n"],"mappings":";;;;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAEA;;;;;;;;;;;;;;;;;;;;ACxCA;AAAA;AAAA;AAIA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;;;;;;;;;;;;;;;;;;;;;;;ACfA;AAAA;AAAA;AAGA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;;;;;;;;;;;;;;;;;;;;ACjBA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAEA;;;;;;;;;;;;;;;;;;ACzBA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;;;;;;;;;;;;;;;;;;;;ACdA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAOA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAGA;AAEA;;;;;;;;;;;;;;;;;;ACvCA;AAEA;AACA;AAEA;AAAA;AAAA;AAEA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAEA;;;;;;;;;;;;;;;;ACrBA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;;;;;;;;;;;;;;;;;;AC5EA;AACA;AACA;AAEA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAEA;;;;;;;;;;;;;;;;;;;;ACpBA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AAAA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;;;;;;;;;;;;;;;;;;;;;;AC/EA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;;;;;;;;;;;;;;;;;;;;ACzlHA;AACA;AACA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAIA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;ACvEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAEA;;;;;;;;;;;;;;;;;;;;;;AClHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAIA;AAGA;AACA;;;;;;;;;;;;;;;;;;;;;AC7EA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAEA;;;;;;;;;;;;AC/EA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACrBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;ACnBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;ACpEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AAEA;AAEA;AACA;AAEA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;AC5DA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;ACpBA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AAAA;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;AChCA;AACA;AAkBA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AACA;;;;;;;;;;;;ACjCA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;;;;;;;;;;ACXA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AC3BA;;;;;;;;;;;ACAA;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAKA;AACA,eA8BA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;A","sourceRoot":""}