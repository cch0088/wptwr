{"version":3,"file":"static/js/main.chunk.js","sources":["webpack:///./src/App.css?d002","/opt/lampp/htdocs/WordPress/wp-content/themes/wptwr/react-src/src/App.js","/opt/lampp/htdocs/WordPress/wp-content/themes/wptwr/react-src/src/components/Footer.jsx","/opt/lampp/htdocs/WordPress/wp-content/themes/wptwr/react-src/src/components/Generic.jsx","/opt/lampp/htdocs/WordPress/wp-content/themes/wptwr/react-src/src/components/Header.jsx","/opt/lampp/htdocs/WordPress/wp-content/themes/wptwr/react-src/src/components/Layout.jsx","/opt/lampp/htdocs/WordPress/wp-content/themes/wptwr/react-src/src/components/Main.jsx","/opt/lampp/htdocs/WordPress/wp-content/themes/wptwr/react-src/src/components/MainMenu.jsx","/opt/lampp/htdocs/WordPress/wp-content/themes/wptwr/react-src/src/components/Modal.jsx","/opt/lampp/htdocs/WordPress/wp-content/themes/wptwr/react-src/src/components/NoPage.jsx","/opt/lampp/htdocs/WordPress/wp-content/themes/wptwr/react-src/src/components/PasswordReset.jsx","/opt/lampp/htdocs/WordPress/wp-content/themes/wptwr/react-src/src/components/UserControl.jsx","/opt/lampp/htdocs/WordPress/wp-content/themes/wptwr/react-src/src/components/events/EventSite.jsx","/opt/lampp/htdocs/WordPress/wp-content/themes/wptwr/react-src/src/components/events/NewEventForm.jsx","/opt/lampp/htdocs/WordPress/wp-content/themes/wptwr/react-src/src/components/forms/ConfirmForm.jsx","/opt/lampp/htdocs/WordPress/wp-content/themes/wptwr/react-src/src/components/forms/ConfirmFormRegister.jsx","/opt/lampp/htdocs/WordPress/wp-content/themes/wptwr/react-src/src/components/forms/Loading.jsx","/opt/lampp/htdocs/WordPress/wp-content/themes/wptwr/react-src/src/components/forms/LoginForm.jsx","/opt/lampp/htdocs/WordPress/wp-content/themes/wptwr/react-src/src/components/forms/PasswordForm.jsx","/opt/lampp/htdocs/WordPress/wp-content/themes/wptwr/react-src/src/components/forms/RegisterForm.jsx","/opt/lampp/htdocs/WordPress/wp-content/themes/wptwr/react-src/src/components/forms/ResetByEmailForm.jsx","/opt/lampp/htdocs/WordPress/wp-content/themes/wptwr/react-src/src/components/forum/ForumListContainer.jsx","/opt/lampp/htdocs/WordPress/wp-content/themes/wptwr/react-src/src/components/forum/ForumSite.jsx","/opt/lampp/htdocs/WordPress/wp-content/themes/wptwr/react-src/src/components/forum/ForumTopic.jsx","/opt/lampp/htdocs/WordPress/wp-content/themes/wptwr/react-src/src/components/forum/ForumTopicContainer.jsx","/opt/lampp/htdocs/WordPress/wp-content/themes/wptwr/react-src/src/components/forum/ForumTopicList.jsx","/opt/lampp/htdocs/WordPress/wp-content/themes/wptwr/react-src/src/components/forum/ForumTopicListContainer.jsx","/opt/lampp/htdocs/WordPress/wp-content/themes/wptwr/react-src/src/components/user/Profile.jsx","/opt/lampp/htdocs/WordPress/wp-content/themes/wptwr/react-src/src/config.js","/opt/lampp/htdocs/WordPress/wp-content/themes/wptwr/react-src/src/features/CategorySlice.jsx","/opt/lampp/htdocs/WordPress/wp-content/themes/wptwr/react-src/src/features/ContentSlice.jsx","/opt/lampp/htdocs/WordPress/wp-content/themes/wptwr/react-src/src/features/ForumSlice.jsx","/opt/lampp/htdocs/WordPress/wp-content/themes/wptwr/react-src/src/features/ModalSlice.jsx","/opt/lampp/htdocs/WordPress/wp-content/themes/wptwr/react-src/src/features/PageServices.jsx","/opt/lampp/htdocs/WordPress/wp-content/themes/wptwr/react-src/src/gql.js","/opt/lampp/htdocs/WordPress/wp-content/themes/wptwr/react-src/src/hooks/useAuth.jsx","/opt/lampp/htdocs/WordPress/wp-content/themes/wptwr/react-src/src/index.js","/opt/lampp/htdocs/WordPress/wp-content/themes/wptwr/react-src/src/lib/apolloClient.jsx","/opt/lampp/htdocs/WordPress/wp-content/themes/wptwr/react-src/src/lib/convert.jsx","/opt/lampp/htdocs/WordPress/wp-content/themes/wptwr/react-src/src/lib/validation.jsx","/opt/lampp/htdocs/WordPress/wp-content/themes/wptwr/react-src/src/logo.svg","/opt/lampp/htdocs/WordPress/wp-content/themes/wptwr/react-src/src/logotext.svg","/opt/lampp/htdocs/WordPress/wp-content/themes/wptwr/react-src/src/serviceWorker.js"],"sourcesContent":["// extracted by mini-css-extract-plugin","import React from \"react\";\nimport './App.css';\nimport * as nav from \"./config\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport Layout from \"./components/Layout\";\nimport Main from \"./components/Main\";\nimport NoPage from \"./components/NoPage\";\nimport PasswordReset from \"./components/PasswordReset\";\nimport ForumSite from \"./components/forum/ForumSite\";\nimport ForumTopicList from \"./components/forum/ForumTopicList\";\nimport ForumTopic from \"./components/forum/ForumTopic\";\nimport { ApolloProvider } from \"@apollo/client\";\nimport { client } from \"./lib/apolloClient\";\nimport { AuthProvider } from \"./hooks/useAuth\";\nimport Profile from \"./components/user/Profile\";\nimport Generic from \"./components/Generic\";\nimport EventSite from \"./components/events/EventSite\";\n\nexport default function App() {\n  const currentUrl = window.location.href;\n\n  return (\n    <ApolloProvider client={client}>\n      <AuthProvider>\n        <BrowserRouter>\n          <Routes>\n            <Route path={nav.WP_ROOT} element={<Layout />}>\n              <Route index element={<Main />} />\n              <Route path=\"set-password\" element={<PasswordReset currentUrl={currentUrl} />} />\n              <Route exact path={nav.UI_FORUM} element={<ForumSite />} />\n              <Route path={`${nav.UI_FORUM_THREADS}/:fromUrlCategoryId`} element={<ForumTopicList />} />\n              <Route path={`${nav.UI_FORUM_TOPIC}/:fromUrlPostId`} element={<ForumTopic />} />\n              <Route path={`${nav.UI_EVENTS}`} element={<EventSite />} />\n              <Route path={`${nav.UI_ACCOUNT}`} element={<Profile />} />\n              <Route path={`${nav.UI_PRIVACY}`} element={<Generic slug={nav.UI_PRIVACY_SLUG} />} />\n              <Route path=\"*\" element={<NoPage />} />\n            </Route>\n          </Routes>\n        </BrowserRouter>\n      </AuthProvider>\n    </ApolloProvider>\n  );\n}\n","import React from \"react\";\nimport logo from '../logo.svg';\nimport logotext from '../logotext.svg';\nimport { UI_PRIVACY } from \"../config\";\n\nexport default function Footer() {\n\nreturn (\n        <div className=\"footer-row\">\n            <div id=\"logo-footer\"><img src={logo} alt=\"Logo\" /></div>\n            <div id=\"logotext-footer\"><img src={logotext} alt=\"Logo Text\" /></div>\n            <div className=\"footer-about\"><span className=\"footer-span\">A privacy focused travel community site.</span></div>\n            <div className=\"footer-buttons\">\n                {/* <a className=\"footer-button\" href={UI_CONTACT}>Contact</a> */}\n                <a className=\"footer-button\" href={UI_PRIVACY}>Privacy Policy</a>\n            </div>\n        </div>\n    )\n}\n","import React, { useEffect } from \"react\";\nimport { renderHTML } from \"../lib/convert\";\nimport { API_PAGES } from \"../config\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { pushContent } from \"../features/ContentSlice\";\nimport { getContent } from \"../features/PageServices\";\n\nconst Generic = ({slug}) => {\n\n    const route = API_PAGES + slug;\n    const markup = useSelector(state => state.content.value);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        getContent(route).then(object => {\n            dispatch(pushContent(object));\n        });\n    },[dispatch, route]);\n\n    return(\n        <div className=\"forum-list-container\">\n            <div dangerouslySetInnerHTML={renderHTML(markup[0].content.rendered)} />\n        </div>\n    )};\n\nexport default Generic;\n","import React from \"react\";\nimport logo from '../logo.svg';\nimport logotext from '../logotext.svg';\nimport { useNavigate } from \"react-router-dom\";\nimport { getRoot } from \"../lib/validation\";\nimport { WP_ROOT } from \"../config\";\n\nexport default function Header() {\n    const navigate = useNavigate();\n\nreturn (\n    <div id=\"branding\" onClick={() => { navigate(getRoot(WP_ROOT)) }}>\n        <div id=\"logo\"><img src={logo} alt=\"Logo\" /></div>\n        <div id=\"logotext\"><img src={logotext} alt=\"Logo Text\" /></div>\n    </div>\n    )\n}\n","import React from \"react\";\nimport Header from \"./Header\";\nimport UserControl from \"./UserControl\";\nimport { Outlet } from \"react-router-dom\";\nimport Footer from \"./Footer\";\n\nconst Layout = () => (<>\n    <div id=\"head-wrap\">\n        <div id=\"head-container\">\n            <Header />\n            <UserControl />\n        </div>\n    </div>\n    <div id=\"content-wrap\">\n        <Outlet />\n    </div>\n    <div id=\"footer-wrap\">\n        <Footer />\n    </div>\n</>);\n\nexport default Layout;\n","import React from \"react\";\nimport MainMenu from \"./MainMenu\"\nimport { API_PAGES, WP_ROOT } from \"../config\";\nimport { useQuery } from \"@apollo/client\";\nimport { LATEST_POSTS } from \"../gql\";\nimport { getDateFromString, getRoot } from \"../lib/validation\";\nimport { useNavigate } from \"react-router-dom\";\n\nexport default function Main() {\n    const menuRoute = API_PAGES + \"main-menu\";\n    const { loading, error, data } = useQuery(LATEST_POSTS);\n\n    const navigate = useNavigate();\n\n    return (\n        <div>\n            <div id=\"heading-container\"><h2>Quick Links</h2></div>\n            <MainMenu route={menuRoute} />\n            {!error && !loading &&\n            <>\n                <div id=\"heading-container\"><h2>Latest Posts</h2></div>\n                <div className=\"forum-section\">\n                {data.posts.edges.map((post) => (\n                    <div key={post.node.databaseId} className=\"forum-recent\" onClick={() => navigate(getRoot(WP_ROOT) + post.node.uri.slice(1, -1))}>\n                        <span className=\"bubble\" role=\"img\" aria-label=\"topic\">\n                            <img alt=\"avatar\" src={post.node.author.node.avatar.url} />\n                        </span>\n                        <div>\n                            <div className=\"forum-topic-name\">{post.node.title}</div>\n                            <div className=\"forum-topic-description\">\n                                By {post.node.author.node.name} {getDateFromString(post.node.date)}\n                            </div>\n                        </div>\n                    </div>\n                    ))}\n                </div>\n            </>\n            }\n        </div>\n    )\n}\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getContent } from \"../features/PageServices\";\nimport { pushContent } from \"../features/ContentSlice\";\nimport { WP_UPLOADS } from \"../config\";\n\nexport default function MainMenu({route}) {\n\n    const dispatch = useDispatch();\n    const menu = useSelector(state => state.content.value);\n\n    useEffect(() => {\n        getContent(route).then(object => {\n            dispatch(pushContent(object));\n        });\n    },[dispatch, route]);\n\n    const regex = /(<([^>]+)>)/gi;\n\n    const menuData = menu[0]\n        .content\n        .rendered\n        .replace(regex, '')\n        .split(/\\s+/)\n        .filter((i) => (i !== ''));\n\n    return (\n        <div id=\"card-container\">\n            {menuData.map((str, i) => {\n                const [name, link, image] = str.split(':');\n                return (<a key={i} href={link} className=\"card\">\n                    <img className=\"card-photo\" alt={name} src={`${WP_UPLOADS}/${image}`} />\n                    <div className=\"card-text\">{name}</div>\n                </a>);\n            })}\n        </div>\n    )\n}\n","import React from 'react';\n\nimport { closeModal } from '../features/ModalSlice';\nimport { useDispatch } from 'react-redux';\n\nexport default function Modal({children, disableClose})\n{\n    const dispatch = useDispatch();\n\n    const handleClose = (e) => {\n        if (e.target.className === \"modal-bg\" && !disableClose) { dispatch(closeModal()) }\n    };\n\n    return (\n        <div className=\"modal-bg\" onClick={(e) => handleClose(e)}>\n            <section className=\"modal-main\">\n                {children}\n            </section>\n        </div>);\n};\n","import React from \"react\";\n\nconst NoPage = () => (<div className=\"slide\">Resource not found</div>);\n\nexport default NoPage;\n","import React, { useEffect, useState } from \"react\";\nimport { WP_ROOT } from \"../config\";\nimport { useNavigate } from \"react-router-dom\";\nimport { getRoot } from \"../lib/validation\";\nimport Modal from \"./Modal\";\nimport PasswordForm from \"./forms/PasswordForm\";\n\nexport default function PasswordReset({currentUrl}) {\n    const navigate = useNavigate();\n\n    const [key, setKey] = useState();\n    const [user, setUser] = useState();\n\n    useEffect(() => {\n        if (currentUrl && currentUrl.includes('set-password')) {\n            const searchUrl = new URLSearchParams(currentUrl);\n            const values = [];\n            searchUrl.forEach((x) => values.push(x));\n            setKey(values[0]);\n            setUser(values[1]);\n        } else {\n            navigate(getRoot(WP_ROOT));\n        }\n    },[currentUrl, navigate]);\n\n    return (\n            <Modal children={ <PasswordForm pkey={key} login={user} /> } />\n        )\n}\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { openModal } from '../features/ModalSlice';\nimport { useMutation } from '@apollo/client';\nimport { GET_USER, LOG_OUT } from '../gql';\nimport { UI_ACCOUNT } from '../config';\nimport Modal from './Modal';\nimport LoginForm from './forms/LoginForm';\nimport useAuth from '../hooks/useAuth';\nimport RegisterForm from './forms/RegisterForm';\nimport ConfirmForm from './forms/ConfirmForm';\nimport ConfirmFormRegister from './forms/ConfirmFormRegister';\nimport ResetByEmailForm from './forms/ResetByEmailForm';\n\nexport default function UserControl() {\n\n    const modal = useSelector(state => state.modal.value);\n    const [form, setForm] = useState(0);\n    const [blockClose, setBlockClose] = useState(false);\n\n    const dispatch = useDispatch();\n    const {loggedIn, loading, user} = useAuth();\n\n    const [logOut] = useMutation(LOG_OUT, {\n        refetchQueries: [\n            { query: GET_USER }\n        ],\n    });\n\n    const openForm = (i) => {\n        setForm(i);\n        dispatch(openModal());\n    }\n\nreturn (\n        <div id=\"usercontrol\">\n            { form === 0 && modal.show && <Modal children={ <ConfirmForm /> } disableClose={false} /> }\n            { form === 1 && modal.show && <Modal children={ <LoginForm setForm={setForm} /> } disableClose={false} /> }\n            { form === 2 && modal.show && <Modal children={ <RegisterForm setForm={setForm} setBlockClose={setBlockClose} /> } disableClose={blockClose} /> }\n            { form === 3 && modal.show && <Modal children={ <ResetByEmailForm setForm={setForm} setBlockClose={setBlockClose} /> } disableClose={blockClose} /> }\n            { form === 4 && modal.show && <Modal children={ <ConfirmFormRegister /> } disableClose={blockClose} /> }\n            {\n                (!loggedIn && !loading) &&\n                <>\n                    <span className=\"userbutton\" onClick={() => { openForm(1) }}>\n                        <span role=\"img\" aria-label=\"head\">👤</span> Log In or Sign Up\n                    </span>\n                </>\n            }\n            {\n                (loggedIn && !loading) &&\n                <>\n                    <a className=\"userbutton\" href={UI_ACCOUNT}>\n                        <span role=\"img\" aria-label=\"head\">👤</span> {user.username}\n                    </a>\n                    <span className=\"userbutton\" onClick={() => { logOut() }}>\n                        <span role=\"img\" aria-label=\"door\">🚪</span> Log Out\n                    </span>\n                </>\n            }\n            {\n                (loading) &&\n                <>\n                    <span className=\"userbutton\">\n                        <span role=\"img\" aria-label=\"hourglass\">⏳</span> Loading...\n                    </span>\n                </>\n            }\n        </div>\n    )\n}\n","import React, { useEffect, useState } from 'react';\nimport { useMutation, useQuery } from '@apollo/client';\nimport { EVENTS_CATEGORY } from '../../config';\nimport { EVENTS_LIST, NEW_EVENT } from '../../gql';\nimport useAuth from '../../hooks/useAuth';\nimport NewEventForm from './NewEventForm';\n\nexport default function EventSite() {\n    const [newEventOpen, setNewEventOpen] = useState(false);\n\n    const [eventData, setEventData] = useState();\n    const [date, setDate] = useState();\n    const [title, setTitle] = useState();\n    const [content, setContent] = useState();\n    const [category, setCategory] = useState();\n    const [duration, setDuration] = useState();\n    const [location, setLocation] = useState();\n\n    const { loggedIn, user } = useAuth();\n    const { loading, error, data } = useQuery(EVENTS_LIST, {\n        variables: {\n            categoryName: EVENTS_CATEGORY\n        }\n    });\n\n    const [addNewEvent] = useMutation(NEW_EVENT);\n\n    useEffect(() => {\n        setEventData(data);\n    }, [data]);\n\n    const insertEvent = (postId, title) => {\n        const newEvent = {\n            __typename: \"Post\",\n            postId,\n            title,\n            content,\n            author: {\n                __typename: \"NodeWithAuthorToUserConnectionEdge\",\n                node: {\n                    __typename: \"User\",\n                    name: user.username\n                }\n            },\n            \"isSticky\": false,\n            \"editingLockedBy\": null\n        };\n        setEventData({ posts: { nodes: [ newEvent, ...eventData.posts.nodes ] } });\n    }\n\n    const handleNewEvent = () => {\n        addNewEvent({\n            variables: {\n                slug: EVENTS_CATEGORY,\n                title,\n                content\n            }\n        }).then((submitNewEvent) =>\n            insertEvent(submitNewEvent.data.createPost.post.postId, title)\n        );\n        setNewEventOpen(false);\n    }\n\n    return (\n        <NewEventForm\n            loading={loading}\n            error={error}\n            data={eventData}\n            loggedIn={loggedIn}\n            newEventOpen={newEventOpen}\n            title={title}\n            content={content}\n            category={category}\n            date={date}\n            duration={duration}\n            location={location}\n            setTitle={setTitle}\n            setDate={setDate}\n            setContent={setContent}\n            setCategory={setCategory}\n            setDuration={setDuration}\n            setLocation={setLocation}\n            setNewEventOpen={setNewEventOpen}\n            handleNewEvent={handleNewEvent}\n        />\n    );\n}\n","import React from \"react\";\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport { getDateFromString } from '../../lib/validation';\nimport { renderHTML } from \"../../lib/convert\";\n\nconst NewEventForm = ({\n    loading,\n    error,\n    data,\n    loggedIn,\n    newEventOpen,\n    title,\n    content,\n    category,\n    date,\n    duration,\n    location,\n    setDate,\n    setTitle,\n    setContent,\n    setCategory,\n    setDuration,\n    setLocation,\n    setNewEventOpen,\n    handleNewEvent\n}) =>\n(\n    <div className=\"forum-list-container\">\n        {newEventOpen\n        ?\n            <div className=\"forum-category\">Add a new event</div>\n        :\n            <div className=\"forum-section\">\n                <div className=\"forum-category\">\n                    {!loading && !error && data && data.posts.nodes.map((post, count) => (\n                        <div key={post.postId} className=\"forum-post\">\n                            <div className=\"forum-post-info\">Event #{count + 1} created by {post.author.node.name} {getDateFromString(post.date)}</div>\n                            <div dangerouslySetInnerHTML={renderHTML(post.content)} />\n                        </div>\n                    ))}\n                </div>\n            </div>\n        }\n        {loggedIn\n        ? <> {\n                newEventOpen\n                ? <>\n                    <div id=\"new-topic-container\">\n                    <input className=\"new-topic-title\"\n                        type=\"text\"\n                        name=\"title\"\n                        placeholder=\"Event title\"\n                        value={title}\n                        onChange={(e) => { setTitle(e.target.value); }}\n                    />\n                    </div>\n                    <div id=\"new-topic-container\">\n                    <input className=\"new-topic-title\"\n                        type=\"text\"\n                        name=\"category\"\n                        placeholder=\"Event category\"\n                        value={category}\n                        onChange={(e) => { setCategory(e.target.value); }}\n                    />\n                    </div>\n                    <div id=\"new-topic-container\">\n                    <input className=\"new-topic-title\"\n                        type=\"text\"\n                        name=\"duration\"\n                        placeholder=\"Event duration\"\n                        value={duration}\n                        onChange={(e) => { setDuration(e.target.value); }}\n                    />\n                    </div>\n                    <div id=\"new-topic-container\">\n                    <input className=\"new-topic-title\"\n                        type=\"text\"\n                        name=\"location\"\n                        placeholder=\"Event location\"\n                        value={location}\n                        onChange={(e) => { setLocation(e.target.value); }}\n                    />\n                    </div>\n                    <div id=\"new-topic-container\">\n                    <input className=\"new-topic-title\"\n                        type=\"text\"\n                        name=\"date\"\n                        placeholder=\"Event date\"\n                        value={date}\n                        onChange={(e) => { setDate(e.target.value); }}\n                    />\n                    </div>\n                    <div id=\"text-editor-container\">\n                        <ReactQuill\n                            theme=\"snow\"\n                            value={content}\n                            onChange={setContent}\n                        />\n                    </div>\n                    <button className=\"forum-button\"\n                        onClick={() => handleNewEvent()}\n                        disabled={\n                            !title\n                            || !category\n                            || !duration\n                            || !location\n                            || !date\n                            || !content}>New event\n                    </button>\n                    <button className=\"forum-button right-offset\" onClick={() => setNewEventOpen(false)}>Cancel</button>\n                </>\n                :\n                <>\n                    {!loading && !error && data\n                        && (data.posts.nodes.length === 0)\n                        && <div className=\"forum-category\">\n                        Nothing to show here... Add an event!\n                    </div>}\n                    <button className=\"forum-button\" onClick={() => setNewEventOpen(true)}>New event</button>\n                </>\n            }\n        </>\n        : <div>You must be logged in to create an event.</div>}\n    </div>\n);\n\nexport default NewEventForm;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { closeModal } from '../../features/ModalSlice';\n\nexport default function ConfirmForm() {\n\n    const dispatch = useDispatch();\n\n    return (<form id=\"site-form\">\n    <div className=\"label-login\">Please check your e-mail for next steps.</div>\n\n    <input className=\"button\"\n        type=\"button\"\n        name=\"ok\"\n        value=\"OK\"\n        onClick={() => { dispatch(closeModal()) }}\n    />\n    </form>)\n}\n","import React from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nexport default function ConfirmFormRegister() {\n\n    const navigate = useNavigate();\n\n    return (<form id=\"site-form\">\n    <div className=\"label-login\">Registration confirmation was sent to your e-mail. Click OK to be logged in with your new account.</div>\n\n    <input className=\"button\"\n        type=\"button\"\n        name=\"ok\"\n        value=\"OK\"\n        onClick={() => { navigate(0) }}\n    />\n    </form>)\n}\n","import React from 'react';\nimport { BarLoader } from 'react-spinners';\n\nexport default function Loading() {\n    return (\n        <form id=\"site-form\">\n            <div className=\"label-login\">Sending E-mail...</div>\n            <BarLoader color=\"#52bfd9\" />\n        </form>\n    );\n}\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useMutation } from '@apollo/client';\nimport { closeModal } from '../../features/ModalSlice';\nimport { GET_USER, LOG_IN } from '../../gql';\n\nexport default function LoginForm({setForm}) {\n\n    const dispatch = useDispatch();\n\n    const [message, setMessage] = useState(null);\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n\n    const [logIn, { loading }] = useMutation(LOG_IN, {\n        refetchQueries: [\n        { query: GET_USER }\n        ],\n    });\n\n    function handleLogin(e) {\n        e.preventDefault();\n\n        if (username.length > 0 && password.length > 0) {\n            logIn({\n            variables: {\n                login: username,\n                password,\n            }\n            })\n            .then((_status) => dispatch(closeModal()))\n            .catch((_error) => setMessage('Invalid username or password!'));\n        } else {\n            setMessage('Missing username or password.');\n        }\n    }\n\nreturn (\n    <form id=\"site-form\">\n        <div className=\"title-label\">LOG IN</div>\n\n        {(message) ? <div className='error-label'>{message}</div> : null}\n\n        <div className=\"label-login\">Username or Nickname</div>\n\n        <input className=\"field-login\"\n            type=\"text\"\n            name=\"username\"\n            value={username}\n            onChange={(e) => { setUsername(e.target.value) }}\n        />\n\n        <div className=\"label-login\">Password</div>\n\n        <input className=\"field-login\"\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={(e) => { setPassword(e.target.value) }}\n        />\n\n        <span className=\"link-label\" onClick={() => { setForm(3) }}>Forgot Password</span>\n\n        <input className=\"button\"\n            type=\"submit\"\n            name=\"login\"\n            value=\"Sign In\"\n            onClick={(e) => { handleLogin(e) }}\n            disabled={loading}\n        />\n\n        <span className=\"link-label\" onClick={() => { setForm(2) }}>Create Account</span>\n    </form>\n    );\n}\n","import React, { useState } from 'react';\nimport PasswordStrengthBar from 'react-password-strength-bar';\nimport { useMutation } from '@apollo/client';\nimport { getRoot, validatePassword } from '../../lib/validation';\nimport { useNavigate } from 'react-router-dom';\nimport { WP_ROOT } from '../../config';\nimport { RESET_PASSWORD } from '../../gql';\nimport Loading from './Loading';\n\nexport default function PasswordForm({pkey, login}) {\n    const navigate = useNavigate();\n\n    const [message, setMessage] = useState(null);\n    const [password, setPassword] = useState('');\n    const [passwordConfirm, setPasswordConfirm] = useState('');\n\n    const [resetPassword, { loading }] = useMutation(RESET_PASSWORD);\n\n    function handleSubmit(e) {\n        e.preventDefault();\n\n        if (password.length > 0 && validatePassword(password, passwordConfirm)) {\n            resetPassword({\n                variables: {\n                  key: pkey,\n                  login,\n                  password,\n                },\n              })\n            .then((_status) => navigate(getRoot(WP_ROOT)))\n            .catch((_error) => setMessage('Error resetting password.'));\n        } else if (!validatePassword(password, passwordConfirm)) {\n            setMessage('Passwords do not match.');\n        } else {\n            setMessage('Check that all fields are filled.');\n        }\n    }\n\n    return (<>\n    {loading ? <Loading /> :\n    <form id=\"site-form\">\n        <div className=\"title-label\">PASSWORD RESET</div>\n\n        {(message) ? <div className='error-label'>{message}</div> : null}\n\n        <div className=\"label-login\">New password for {login}</div>\n\n        <div className=\"label-login\">Password</div>\n\n        <input className=\"field-login\"\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={(e) => { setPassword(e.target.value); }}\n        />\n\n        <div className=\"label-login\">Confirm Password</div>\n\n        <input className=\"field-login\"\n            type=\"password\"\n            name=\"confirm-password\"\n            value={passwordConfirm}\n            onChange={(e) => { setPasswordConfirm(e.target.value); }}\n        />\n\n        <PasswordStrengthBar\n            className=\"password-bar\"\n            password={password}\n            scoreWords={[\n                'Weak',\n                'Acceptable',\n                'Good',\n                'Strong',\n                'Excellent'\n            ]}\n            shortScoreWord='Weak'\n        />\n\n        <input className=\"button\"\n            type=\"submit\"\n            name=\"reset\"\n            value=\"Reset\"\n            onClick={(e) => { handleSubmit(e); }}\n            disabled={loading}\n        />\n\n        <span className=\"link-label\" onClick={() => { navigate(getRoot(WP_ROOT)) }}>Cancel</span>\n    </form>\n    }</>);\n}\n","import React, { useState } from 'react';\nimport PasswordStrengthBar from 'react-password-strength-bar';\nimport { useMutation } from '@apollo/client';\nimport { validateEmail, validatePassword } from '../../lib/validation';\nimport { REGISTER_USER } from '../../gql';\nimport Loading from './Loading';\n\nexport default function RegisterForm({setForm, setBlockClose}) {\n\n    const [message, setMessage] = useState(null);\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [passwordConfirm, setPasswordConfirm] = useState('');\n    const [isHuman, setIsHuman] = useState(false);\n    const [email, setEmail] = useState('');\n\n    const [register, { loading }] = useMutation(REGISTER_USER);\n\n    function resetForm() {\n        setBlockClose(false);\n        setIsHuman(false);\n    }\n\n    function handleSubmit(e) {\n        e.preventDefault();\n\n        if (isHuman && username.length > 0 && password.length > 0 && validateEmail(email)) {\n            setBlockClose(true);\n            register({\n            variables: {\n                username,\n                email,\n                password\n            }\n            }).then((_status) => { setForm(4) }).catch((_error) => {\n                resetForm();\n                setMessage('Username or e-mail already taken.')\n            });\n        } else if (!validatePassword(password, passwordConfirm)) {\n            resetForm();\n            setMessage('Passwords do not match.');\n        } else if (!validateEmail(email)) {\n            resetForm();\n            setMessage('Invalid e-mail provided.');\n        } else {\n            resetForm();\n            setMessage('Check that all fields are filled.');\n        }\n    }\n\nreturn (<>\n        {loading ? <Loading /> :\n        <form id=\"site-form\">\n            <div className=\"title-label\">SIGN UP</div>\n\n            {(message) ? <div className='error-label'>{message}</div> : null}\n\n            <div className=\"label-login\">Username or Nickname</div>\n\n            <input className=\"field-login\"\n                type=\"text\"\n                name=\"username\"\n                value={username}\n                onChange={(e) => { setUsername(e.target.value) }}\n            />\n\n            <div className=\"label-login\">E-mail</div>\n\n            <input className=\"field-login\"\n                type=\"email\"\n                name=\"email\"\n                value={email}\n                onChange={(e) => { setEmail(e.target.value) }}\n            />\n\n            <div className=\"label-login\">Password</div>\n\n            <input className=\"field-login\"\n                type=\"password\"\n                name=\"password\"\n                value={password}\n                onChange={(e) => { setPassword(e.target.value) }}\n            />\n\n            <PasswordStrengthBar\n                className=\"password-bar\"\n                password={password}\n                scoreWords={[\n                    'Weak',\n                    'Acceptable',\n                    'Good',\n                    'Strong',\n                    'Excellent'\n                ]}\n                shortScoreWord='Weak'\n            />\n\n            <div className=\"label-login\">Confirm Password</div>\n\n            <input className=\"field-login\"\n                type=\"password\"\n                name=\"confirm-password\"\n                value={passwordConfirm}\n                onChange={(e) => { setPasswordConfirm(e.target.value) }}\n            />\n\n            <div className=\"label-login\">I'm not a bot</div>\n\n            <input className=\"human-check\"\n                type=\"checkbox\"\n                name=\"human\"\n                value=\"human\"\n                onChange={(e) => setIsHuman(e.target.checked)}\n            />\n\n            <input className=\"button\"\n                type=\"submit\"\n                name=\"register\"\n                value=\"Sign Up\"\n                disabled={!(isHuman && username.length > 0 && password.length > 0 && email.length > 0) || loading}\n                onClick={(e) => { handleSubmit(e) }}\n            />\n        </form>}\n    </>)\n}\n","import React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { validateEmail } from '../../lib/validation';\nimport { SEND_PASSWORD_RESET_EMAIL } from '../../gql';\nimport Loading from './Loading';\n\nexport default function ResetByEmailForm({setForm, setBlockClose}) {\n\n    const [message, setMessage] = useState(null);\n    const [email, setEmail] = useState('');\n    const [isHuman, setIsHuman] = useState(false);\n\n    const [sendPasswordResetEmail, { loading }] = useMutation(SEND_PASSWORD_RESET_EMAIL);\n\n    function handleSubmit(e) {\n        e.preventDefault();\n\n        if (validateEmail(email)) {\n            setBlockClose(true);\n            sendPasswordResetEmail({\n                variables: {\n                  username: email,\n                }\n            })\n            .then((_status) => setForm(0))\n            .catch((_error) => setMessage('E-mail could not be sent.'));\n        } else if (!validateEmail(email)) {\n            setMessage('Invalid e-mail provided.');\n        } else {\n            setMessage('Check that all fields are filled.');\n        }\n    }\n\n    return (<>\n    {loading ? <Loading /> :\n        <form id=\"site-form\">\n            <div className=\"title-label\">PASSWORD RESET</div>\n\n            {(message) ? <div className='error-label'>{message}</div> : null}\n\n            <div className=\"label-login\">E-mail</div>\n\n            <input className=\"field-login\"\n                type=\"email\"\n                name=\"email\"\n                value={email}\n                onChange={(e) => { setEmail(e.target.value) }}\n            />\n\n            <div className=\"label-login\">I'm not a bot</div>\n\n            <input className=\"human-check\"\n                type=\"checkbox\"\n                name=\"human\"\n                value=\"human\"\n                onChange={(e) => setIsHuman(e.target.checked)}\n            />\n\n            <input className=\"button\"\n                type=\"submit\"\n                name=\"send\"\n                value=\"Request\"\n                onClick={(e) => { handleSubmit(e) }}\n                disabled={!isHuman || !email.length > 0 || loading}\n            />\n        </form>\n    }</>);\n}\n","import React from \"react\";\n\nconst ForumListContainer = ({\n    topics,\n    headings,\n    handleNavigation\n}) =>\n(\n    topics && headings && (\n        <div className=\"forum-list-container\">\n            {headings.map((header) => {\n                return (\n                    <div className=\"forum-section\" key={header.id}>\n                        <div className=\"forum-category\">{header.name}</div>\n                        {topics.filter((item) => item.parent === header.id)\n                            .map((i) => {\n                                return (\n                                    <div key={i.id}\n                                        className=\"forum-topic\"\n                                        onClick={() => handleNavigation(i.id)}\n                                    >\n                                        <span className=\"bubble\" role=\"img\" aria-label=\"topic\">🗨️</span>\n                                        <div>\n                                            <div className=\"forum-topic-name\">{i.name}</div>\n                                            <div className=\"forum-topic-description\">{i.description}</div>\n                                        </div>\n                                    </div>\n                                );\n                            }\n                        )}\n                    </div>\n                );\n            })}\n        </div>\n    )\n);\n\nexport default ForumListContainer;\n","import React, { useEffect } from \"react\";\nimport { API_CATEGORIES } from \"../../config\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getContent } from \"../../features/PageServices\";\nimport { pushForumContent } from \"../../features/ForumSlice\";\nimport { useNavigate } from \"react-router-dom\";\nimport { UI_FORUM_THREADS } from \"../../config\";\nimport ForumListContainer from \"./ForumListContainer\";\n\nfunction ForumSite() {\n    const route = API_CATEGORIES;\n    const categories = useSelector(state => state.forum.value);\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n    const headings = [];\n    const topics = [];\n\n    useEffect(() => {\n        getContent(route).then(object => {\n            dispatch(pushForumContent(object));\n        });\n    },[dispatch, route]);\n\n    categories.forEach(item => {\n        if (item.parent > 0) {\n            topics.push({\n                id: item.id,\n                name: item.name,\n                slug: item.slug,\n                description: item.description,\n                parent: item.parent\n            })\n        }\n        else if (item.slug !== \"all\") {\n            headings.push({\n                id: item.id,\n                name: item.description\n            })\n        }\n    })\n\n    const handleNavigation = (categoryId) => {\n        navigate(`${UI_FORUM_THREADS}/:${categoryId}`);\n    };\n\n    return (\n        <ForumListContainer\n            handleNavigation={handleNavigation}\n            headings={headings}\n            topics={topics}\n        />\n    );\n}\nexport default ForumSite;\n","import React, { useEffect, useState } from \"react\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { FORUM_GET_POSTS, FORUM_REPLY } from \"../../gql\";\nimport { UI_FORUM } from \"../../config\";\nimport { renderHTML } from \"../../lib/convert\";\nimport ForumTopicContainer from \"./ForumTopicContainer\";\nimport useAuth from \"../../hooks/useAuth\";\n\nfunction ForumTopic() {\n    const { loggedIn, user } = useAuth();\n    const { fromUrlPostId } = useParams();\n    const postId = Number(fromUrlPostId.replace(':', ''));\n\n    const [replyOpen, setReplyOpen] = useState(false);\n    const [lastReplyAuthor, setLastReplyAuthor] = useState();\n    const [replyDisabled, setReplyDisabled] = useState(false);\n    const [content, setContent] = useState('');\n    const [title, setTitle] = useState('');\n    const [topic, setTopic] = useState();\n\n    const { loading: postLoading, error, data } = useQuery(FORUM_GET_POSTS, { variables: { postId } });\n    const [sendReply, { loading: replyLoading }] = useMutation(FORUM_REPLY);\n\n    const navigate = useNavigate();\n\n    const insertReply = (content) => {\n        const newPost = {\n            __typename: \"PostToCommentConnectionEdge\",\n            node: {\n                __typename: \"Comment\",\n                databaseId: 0,\n                content,\n                author: {\n                    __typename: \"CommentToCommenterConnectionEdge\",\n                    node: {\n                        __typename: \"User\",\n                        name: user.username,\n                        avatar: user.avatar\n                    }\n                }\n            }\n        };\n        const edges = [ ...topic.comments.edges, newPost ];\n        const comments = { ...topic.comments, edges };\n        !replyLoading && setTopic({...topic, comments});\n    }\n\n    const submitReply = () => {\n        setReplyOpen(false);\n        setReplyDisabled(true);\n        sendReply({\n            variables: {\n                commentOn: postId,\n                content,\n            }\n        }).then(() => insertReply(content));\n    }\n\n    useEffect(() => {\n        if (error) {\n            navigate(UI_FORUM);\n        } else if (data) {\n            setTopic(data.posts.nodes[0]);\n            data.posts.nodes[0].comments.edges.length > 0\n                ? setLastReplyAuthor(data.posts.nodes[0].comments.edges.slice(-1)[0].node.author.node.databaseId)\n                : setLastReplyAuthor(data.posts.nodes[0].author.node.databaseId);\n            setReplyDisabled(user && (user.databaseId === lastReplyAuthor));\n        }\n    },[error, data, lastReplyAuthor, navigate, user])\n\n    return (\n        <ForumTopicContainer\n            postLoading={postLoading}\n            loggedIn={loggedIn}\n            topic={topic}\n            error={error}\n            content={content}\n            title={title}\n            setTitle={setTitle}\n            setReplyOpen={setReplyOpen}\n            setContent={setContent}\n            submitReply={submitReply}\n            replyOpen={replyOpen}\n            replyLoading={replyLoading}\n            replyDisabled={!loggedIn || replyDisabled}\n            renderHTML={renderHTML}\n        />\n    );\n}\n\nexport default ForumTopic;\n","import React from \"react\";\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport { getDateFromString } from \"../../lib/validation\";\n\nconst ForumTopicContainer = ({\n    postLoading,\n    loggedIn,\n    topic,\n    error,\n    replyOpen,\n    setReplyOpen,\n    replyLoading,\n    replyDisabled,\n    submitReply,\n    renderHTML,\n    setContent,\n    content\n}) => (\n    <div className=\"forum-list-container\">\n        {postLoading && (\n            <div className=\"forum-section\">\n                <div>Loading...</div>\n            </div>\n        )}\n        {topic && !error && (\n        <>\n            <div className=\"forum-section\">\n                <div className=\"forum-category\">{topic.title}</div>\n                <div className=\"forum-post\">\n                    <div className=\"forum-post-owner\">\n                        <img alt=\"avatar\" src={topic.author.node.avatar.url} />\n                        {topic.author.node.name}\n                    </div>\n                    <div className=\"forum-post-info\">Post #1 {getDateFromString(topic.date)}</div>\n                    <div dangerouslySetInnerHTML={renderHTML(topic.content)} />\n                </div>\n                {topic.comments.edges.map((post, count) => (\n                    <div key={post.node.databaseId} className=\"forum-post\">\n                        <div className=\"forum-post-owner\">\n                            <img alt=\"avatar\" src={post.node.author.node.avatar.url} />\n                            {post.node.author.node.name}\n                        </div>\n                        <div className=\"forum-post-info\">Post #{count + 2} {getDateFromString(post.node.date)}</div>\n                        <div dangerouslySetInnerHTML={renderHTML(post.node.content)} />\n                    </div>\n                ))}\n            </div>\n            {\n                !replyOpen\n                ? <>\n                    {\n                        replyDisabled\n                        ? loggedIn\n                            ? <div>You replied to this post.</div>\n                            : <div>You must be logged in to post a reply.</div>\n                        : <button className=\"forum-button\" onClick={() => setReplyOpen(true)}>Add reply</button>\n                    }\n                </>\n                : <>\n                    <div id=\"text-editor-container\">\n                        <ReactQuill\n                            theme=\"snow\"\n                            value={content}\n                            onChange={setContent}\n                        />\n                    </div>\n                    <button className=\"forum-button\" disabled={\n                        replyLoading\n                        || content === \"<p><br></p>\"\n                        || !content\n                        || replyDisabled\n                    } onClick={() => submitReply()}>Add reply</button>\n                </>\n            }\n        </>\n        )}\n    </div>\n);\n\nexport default ForumTopicContainer;\n","import React, { useEffect, useState } from 'react';\nimport { useMutation, useQuery } from '@apollo/client';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { API_CATEGORIES, UI_FORUM, UI_FORUM_TOPIC } from '../../config';\nimport { FORUM_NEW_TOPIC, TOPIC_LIST } from '../../gql';\nimport ForumTopicListContainer from './ForumTopicListContainer';\nimport { setCategory } from '../../features/CategorySlice';\nimport { getContent } from '../../features/PageServices';\nimport useAuth from '../../hooks/useAuth';\n\nfunction ForumTopicList() {\n    const { loggedIn, user } = useAuth();\n\n    const { fromUrlCategoryId } = useParams();\n    const categoryId = Number(fromUrlCategoryId.replace(':', ''));\n\n    const dispatch = useDispatch();\n\n    const route = API_CATEGORIES;\n    const category = useSelector(state => state.category.value);\n\n    const navigate = useNavigate();\n\n    const [topic, setTopic] = useState([]);\n    const [title, setTitle] = useState('');\n    const [heading, setHeading] = useState(category.categoryName);\n    const [content, setContent] = useState('');\n\n    const [newTopicOpen, setNewTopicOpen] = useState(false);\n    const [addNewTopic, { loading: newTopicLoading } ] = useMutation(FORUM_NEW_TOPIC);\n\n    const { loading, error, data } = useQuery(TOPIC_LIST, { variables: { categoryId } });\n\n    useEffect(() => {\n        getContent(`${route}/${categoryId}`)\n        .then(object => {\n            dispatch(\n                setCategory({\n                    categoryId: object.id,\n                    categoryName: object.name,\n                    categorySlug: object.slug\n            }))});\n        if (loading) {\n            setHeading('Loading...');\n        } else if (error || categoryId < 1) {\n            navigate(UI_FORUM);\n        } else if (data.posts.nodes[0]) {\n            setHeading(null);\n            setTopic(data.posts.nodes);\n        } else {\n            setHeading('Nothing to show here. Feel free to add a topic.');\n        }\n        // eslint-disable-next-line\n    },[loading, categoryId])\n\n    const handleNavigation = (postId) => {\n        navigate(`${UI_FORUM_TOPIC}/:${postId}`);\n    }\n\n    const insertTopic = (postId, title) => {\n        const newPost = {\n            __typename: \"Post\",\n            postId,\n            title,\n            author: {\n                __typename: \"NodeWithAuthorToUserConnectionEdge\",\n                node: {\n                    __typename: \"User\",\n                    name: user.username\n                }\n            },\n            \"isSticky\": false,\n            \"editingLockedBy\": null\n        };\n        setTopic([...topic, newPost]);\n    }\n\n    const handleNewTopic = () => {\n        addNewTopic({\n            variables: {\n                slug: category.categorySlug,\n                title,\n                content\n            }\n        }).then((newPost) =>\n            insertTopic(newPost.data.createPost.post.postId, title)\n        );\n        setNewTopicOpen(false);\n    }\n\n    return (\n        <ForumTopicListContainer\n            category={category}\n            error={error}\n            heading={heading}\n            topic={topic}\n            loading={loading}\n            newTopicOpen={newTopicOpen}\n            content={content}\n            title={title}\n            newTopicLoading={newTopicLoading}\n            newTopicDisabled={!loggedIn}\n            setTitle={setTitle}\n            handleNavigation={handleNavigation}\n            handleNewTopic={handleNewTopic}\n            setNewTopicOpen={setNewTopicOpen}\n            setContent={setContent}\n        />\n    );\n}\n\nexport default ForumTopicList;\n","import React from \"react\";\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport { getDateFromString } from '../../lib/validation';\n\nconst ForumTopicListContainer = ({\n    category,\n    heading,\n    topic,\n    handleNavigation,\n    handleNewTopic,\n    error,\n    loading,\n    setNewTopicOpen,\n    newTopicOpen,\n    content,\n    setContent,\n    title,\n    setTitle,\n    newTopicLoading,\n    newTopicDisabled\n}) =>\n(\n    <div className=\"forum-list-container\">\n        <div className=\"forum-section\">\n            <div className=\"forum-category\">\n                {newTopicOpen\n                    ? 'New topic in ' + category.categoryName\n                    : category.categoryName}\n            </div>\n            <div>{heading}</div>\n            {!newTopicOpen && topic.map((topic) => (\n                <div key={topic.postId}\n                    id={topic.postId}\n                    className=\"forum-topic\"\n                    onClick={() => handleNavigation(topic.postId)}\n                >\n                    <span className=\"bubble\" role=\"img\" aria-label=\"topic\">🗨️</span>\n                    <div>\n                        <div className=\"forum-topic-name\">{topic.title}</div>\n                        <div className=\"forum-topic-description\">\n                            By {topic.author.node.name} {getDateFromString(topic.date)}\n                        </div>\n                    </div>\n                </div>\n            ))}\n        </div>\n        {!error && !loading &&\n        (!newTopicOpen\n        ? <>\n        {\n            newTopicDisabled\n            ? <div>You must be logged in to create a new topic.</div>\n            : <button onClick={() => setNewTopicOpen(true)} className=\"forum-button\">New topic</button>\n        }\n        </>\n        : <>\n            <div id=\"new-topic-container\">\n            <input className=\"new-topic-title\"\n                type=\"text\"\n                name=\"title\"\n                placeholder=\"Topic title\"\n                value={title}\n                onChange={(e) => { setTitle(e.target.value); }}\n            />\n            </div>\n            <div id=\"text-editor-container\">\n                <ReactQuill\n                    theme=\"snow\"\n                    value={content}\n                    onChange={setContent}\n                />\n            </div>\n            <button disabled={\n                newTopicLoading\n                || content === \"<p><br></p>\"\n                || !content\n                || !title\n                || newTopicDisabled\n            } onClick={() => handleNewTopic()} className=\"forum-button\">Add topic</button>\n            <button onClick={() => setNewTopicOpen(false)} className=\"forum-button right-offset\">Cancel</button>\n        </>\n        )}\n    </div>\n);\n\nexport default ForumTopicListContainer;\n","import React from \"react\";\nimport { UI_ACCOUNT_DELETE } from \"../../config\";\nimport useAuth from \"../../hooks/useAuth\";\n\nexport default function Profile() {\n\nconst {user, loggedIn} = useAuth();\n\nreturn (\n    <>\n        {loggedIn &&\n            <div className=\"slide\">\n                <p>Welcome {user.username}</p>\n                <a href={UI_ACCOUNT_DELETE}>Delete my account...</a>\n            </div>\n        }\n    </>\n    )\n}\n","import { getRoot } from \"./lib/validation\";\n\n// Use forward slash (/) if root is same as site\nexport const WP_ROOT = \"WordPress\";\n\n// GraphQL defaults\nexport const GRAPHQL_URI = getRoot(WP_ROOT) + \"graphql\";\n\n// WordPress defaults\nexport const WP_UPLOADS = getRoot(WP_ROOT) + \"wp-content/uploads\";\nexport const API_PAGES = getRoot(WP_ROOT) + \"wp-json/wp/v2/pages/?slug=\";\nexport const API_POSTS = getRoot(WP_ROOT) + \"wp-json/wp/v2/posts/\";\nexport const API_USERS = getRoot(WP_ROOT) + \"wp-json/wp/v2/users/\";\nexport const API_CATEGORIES = getRoot(WP_ROOT) + \"wp-json/wp/v2/categories?per_page=100\";\n\n// User accounts page\nexport const UI_ACCOUNT = getRoot(WP_ROOT) + \"user\";\n\n// Temporary account removal page\nexport const UI_ACCOUNT_DELETE = getRoot(WP_ROOT) + \"wp-admin/options.php?page=plugin_delete_me_confirmation\";\n\n// Forum pages\nexport const UI_FORUM = getRoot(WP_ROOT) + \"forum\";\nexport const UI_FORUM_THREADS = getRoot(WP_ROOT) + \"forum/threads\";\nexport const UI_FORUM_TOPIC = getRoot(WP_ROOT) + \"forum/threads/post\";\n\n// Events pages\nexport const EVENTS_CATEGORY = \"events-sub\";\nexport const UI_EVENTS = getRoot(WP_ROOT) + \"events\";\n\n// Privacy policy page\nexport const UI_PRIVACY_SLUG = \"privacy-policy\";\nexport const UI_PRIVACY = getRoot(WP_ROOT) + UI_PRIVACY_SLUG;\n\n// Contact form page\nexport const UI_CONTACT = getRoot(WP_ROOT) + \"contact-form\";\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst closedState = { categoryId: null, categoryName: null, categorySlug: null };\n\nexport const categorySlice = createSlice({\n    name: 'category',\n    initialState: { value: closedState },\n    reducers: {\n       setCategory: (state, action) => {\n        state.value = action.payload;\n       },\n       purgeCategory: (state) => {\n        state.value = closedState;\n       }\n    }\n});\n\nexport const { setCategory, purgeCategory } = categorySlice.actions;\n\nexport default categorySlice.reducer;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialStateValue = [{\n    \"id\": 0,\n    \"date\": null,\n    \"date_gmt\": null,\n    \"guid\": {\n        \"rendered\": \"\"\n    },\n    \"modified\": null,\n    \"modified_gmt\": null,\n    \"slug\": null,\n    \"status\": null,\n    \"type\": null,\n    \"link\": null,\n    \"title\": {\n        \"rendered\": \"\"\n    },\n    \"content\": {\n        \"rendered\": \"\",\n        \"protected\": false\n    },\n    \"excerpt\": {\n        \"rendered\": \"\",\n        \"protected\": false\n    },\n    \"author\": 0,\n    \"featured_media\": 0,\n    \"parent\": 0,\n    \"menu_order\": 0,\n    \"comment_status\": \"closed\",\n    \"ping_status\": \"closed\",\n    \"template\": \"\",\n    \"meta\": {\n        \"footnotes\": \"\"\n    },\n    \"_links\": {\n        \"self\": [],\n        \"collection\": [],\n        \"about\": [],\n        \"author\": [],\n        \"replies\": [],\n        \"version-history\": [],\n        \"predecessor-version\": [],\n        \"wp:attachment\": [],\n        \"curies\": [{\n            \"name\": \"wp\",\n            \"href\": \"https://api.w.org/{rel}\",\n            \"templated\": true\n        }]\n    }\n}];\n\nexport const contentSlice = createSlice({\n    name: 'content',\n    initialState: { value: initialStateValue },\n    reducers: {\n       pushContent: (state, action) => {\n        state.value = action.payload;\n       },\n       purgeContent: (state) => {\n        state.value = initialStateValue;\n       } \n    }\n});\n\nexport const { pushContent, purgeContent } = contentSlice.actions;\n\nexport default contentSlice.reducer;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialStateValue = [\n  {\n    \"id\": 1,\n    \"count\": 1,\n    \"description\": \"\",\n    \"link\": \"https://localhost/WordPress/category/uncategorized/\",\n    \"name\": \"Uncategorized\",\n    \"slug\": \"uncategorized\",\n    \"taxonomy\": \"category\",\n    \"parent\": 0,\n    \"meta\": [],\n    \"_links\": {\n      \"self\": [\n        {\n          \"href\": \"https://localhost/WordPress/wp-json/wp/v2/categories/1\"\n        }\n      ],\n      \"collection\": [\n        {\n          \"href\": \"https://localhost/WordPress/wp-json/wp/v2/categories\"\n        }\n      ],\n      \"about\": [\n        {\n          \"href\": \"https://localhost/WordPress/wp-json/wp/v2/taxonomies/category\"\n        }\n      ],\n      \"wp:post_type\": [\n        {\n          \"href\": \"https://localhost/WordPress/wp-json/wp/v2/posts?categories=1\"\n        }\n      ],\n      \"curies\": [\n        {\n          \"name\": \"wp\",\n          \"href\": \"https://api.w.org/{rel}\",\n          \"templated\": true\n        }\n      ]\n    }\n  }\n];\n\nexport const forumSlice = createSlice({\n    name: 'forumContent',\n    initialState: { value: initialStateValue },\n    reducers: {\n       pushForumContent: (state, action) => {\n        state.value = action.payload;\n       },\n       purgeForumContent: (state) => {\n        state.value = initialStateValue;\n       } \n    }\n});\n\nexport const { pushForumContent, purgeForumContent } = forumSlice.actions;\n\nexport default forumSlice.reducer;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst openState = { show: true };\nconst closedState = { show: false };\n\nexport const modalSlice = createSlice({\n    name: 'modal',\n    initialState: { value: closedState },\n    reducers: {\n       openModal: (state) => {\n        state.value = openState;\n       },\n       closeModal: (state) => {\n        state.value = closedState;\n       }\n    }\n});\n\nexport const { openModal, closeModal } = modalSlice.actions;\n\nexport default modalSlice.reducer;\n","export default function PageServices() {}\n\nexport async function getContent(fromUrl) {\n    try {\n        const response = await fetch(fromUrl);\n        const data = await response.json();\n        return data;\n    }\n    catch {\n        return {\"message\": \"Access Error\"};\n    }\n};\n","import { gql } from \"@apollo/client\";\n\nexport const LOG_IN = gql`\n    mutation logIn($login: String!, $password: String!) {\n    loginWithCookies(input: { login: $login password: $password })\n    { status } }`;\n\nexport const LOG_OUT = gql`\n    mutation logOut {\n        logout(input: {})\n        { status }\n    }`;\n\nexport const GET_USER = gql`\n    query getUser {\n        viewer {\n            id\n            databaseId\n            username\n            firstName\n            lastName\n            email\n            capabilities\n            avatar {\n                url\n            }\n        }\n    }`;\n\nexport const REGISTER_USER = gql`\n    mutation registerUser(\n        $username: String!\n        $email: String!\n        $password: String!\n    ) {\n        registerUser(\n            input: {\n            username: $username\n            email: $email\n            password: $password\n            }\n        ) { user { databaseId } }\n    }`;\n\nexport const DELETE_USER = gql`\n    mutation deleteUser(\n        $id: ID!\n    ) {\n        deleteUser(\n            input: {\n                id: $id\n            }\n        ) { user { databaseId } }\n    }`;\n\nexport const RESET_PASSWORD = gql`\n    mutation resetUserPassword(\n        $key: String!\n        $login: String!\n        $password: String!) {\n        resetUserPassword(\n            input: {\n                key: $key\n                login: $login\n                password: $password\n            }) {\n            user { databaseId } } }`;\n\nexport const SEND_PASSWORD_RESET_EMAIL = gql`\n    mutation sendPasswordResetEmail($username: String!) {\n    sendPasswordResetEmail(\n        input: { username: $username }\n    ) { user { databaseId } } }`;\n\nexport const TOPIC_LIST = gql`\nquery getPostsByCategory(\n        $categoryId: Int!\n    )\n{\n    posts(where: {categoryId: $categoryId}) {\n        nodes {\n            postId\n            title\n            date\n            author { node { databaseId name } }\n            isSticky\n            editingLockedBy { node { databaseId name } }\n        }\n    }\n}`;\n\nexport const EVENTS_LIST = gql`\nquery getPostsByCategory(\n        $categoryName: String!\n    )\n{\n    posts(where: {categoryName: $categoryName}) {\n        nodes {\n            postId\n            title\n            date\n            content\n            author { node { databaseId name } }\n            isSticky\n            editingLockedBy { node { databaseId name } }\n        }\n    }\n}`;\n\nexport const NEW_EVENT = gql`\n    mutation newPost($slug: String!, $title: String!, $content: String!) {\n        createPost(\n        input: {\n            clientMutationId: \"CreatePost\",\n            title: $title,\n            content: $content,\n            categories: {\n                nodes: {slug: $slug}\n            },\n            status: PUBLISH\n        } ) {\n        post {\n            postId\n        } }\n}`;\n\nexport const FORUM_NEW_TOPIC = gql`\n    mutation newPost($slug: String!, $title: String!, $content: String!) {\n        createPost(\n        input: {\n            clientMutationId: \"CreatePost\",\n            title: $title,\n            content: $content,\n            categories: {\n                nodes: {slug: $slug}\n            },\n            status: PUBLISH\n        } ) {\n        post {\n            postId\n        } }\n}`;\n\nexport const FORUM_GET_POSTS = gql`\nquery getPostById($postId: Int!) {\n    posts(where: {id: $postId}) {\n    nodes {\n        databaseId\n        title\n        content\n        author { node {\n            databaseId\n            name\n            avatar { url } } }\n        date\n        comments(where: {orderby: COMMENT_DATE, order: ASC}) {\n        edges { node {\n            databaseId\n            content\n            date\n            author { node {\n                databaseId\n                name\n                avatar { url } } } } } } } } }`;\n\nexport const FORUM_REPLY = gql`\nmutation setReply($commentOn: Int!, $content: String!) {\n    createComment(input: {\n            content: $content,\n            commentOn: $commentOn\n    })\n    {\n        clientMutationId\n        success\n    }\n}`;\n\nexport const LATEST_POSTS = gql`\nquery GetPosts {\nposts(first: 5, where: {categoryName: \"all\"}) {\n        edges {\n            node {\n                title\n                date\n                databaseId\n                uri\n                author {\n                    node {\n                        databaseId\n                        name\n                        avatar {\n                            url\n                        }\n                    }\n                }\n            }\n        }\n    }\n}`;\n","import { useQuery } from \"@apollo/client\";\nimport React, { createContext, useContext } from \"react\";\nimport { GET_USER } from \"../gql\";\n\nconst AuthContext = createContext();\n\nexport function AuthProvider({ children }) {\n\n  const { data, loading, error } = useQuery(GET_USER);\n  const user = data?.viewer;\n  const loggedIn = Boolean(user);\n\n  const value = {\n    loggedIn,\n    user,\n    loading,\n    error,\n  };\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>\n}\n\nconst useAuth = () => useContext(AuthContext);\n\nexport default useAuth;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { configureStore } from '@reduxjs/toolkit';\nimport { Provider } from 'react-redux';\nimport modalReducer from './features/ModalSlice';\nimport contentReducer from './features/ContentSlice';\nimport forumReducer from './features/ForumSlice';\nimport categoryReducer from './features/CategorySlice';\n\nconst store = configureStore({\n  reducer: {\n    modal: modalReducer,\n    content: contentReducer,\n    forum: forumReducer,\n    category: categoryReducer,\n  }\n});\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\n\nroot.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { ApolloClient, InMemoryCache, createHttpLink } from \"@apollo/client\";\nimport { GRAPHQL_URI } from \"../config\";\n\nconst link = createHttpLink({\n  uri: GRAPHQL_URI,\n  credentials: 'include'\n});\n\nexport const client = new ApolloClient({\n  cache: new InMemoryCache(),\n  link\n});\n","export const renderHTML = (content) => {\n    return { __html: content };\n};\n","export const validateEmail = (email) => {\n    // eslint-disable-next-line\n    const regex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return regex.test(email);\n}\n\nexport const validatePassword = (password1, password2) => {\n    return password1 === password2;\n}\n\nexport const getRoot = (wp_root_const) => {\n    if (wp_root_const !== '/') {\n        return (`/${wp_root_const}/`);\n    } else {\n        return wp_root_const;\n    }\n}\n\nexport const getDateFromString = (date, locale = 'en-US', timeZone = 'America/New_York') => {\n    if (date) {\n        return \"on \" + new Date(date).toLocaleString(locale,\n            {\n                timeZone,\n                year: 'numeric',\n                day: '2-digit',\n                month: 'long',\n                hour: '2-digit',\n                minute: '2-digit'\n            });\n    }\n    else {\n        return \"just now\";\n    }\n}\n","module.exports = __webpack_public_path__ + \"static/media/logo.e9286273.svg\";","module.exports = __webpack_public_path__ + \"static/media/logotext.1ad91849.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n"],"mappings":";;;;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;;;;;;;;;;;;;;;;;;;;;;AC1CA;AAAA;AAAA;AAGA;AAEA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;;;;;;;;;;;;;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;ACzBA;AAAA;AAAA;AAGA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;;;;;;AChBA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;;;;;;;;;;;;;;;;;;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;;;;;;;;;;;;;;;;;;;;;ACxCA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAOA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAGA;;;;;;;;;;;;;;;;;;;ACrCA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;;;;;;;;;;;;;;;;ACnBA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;;;;;;;;;;;;;;;;;;;;;;ACtEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;;;;;;;;ACtFA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;;;;;;;;;;;;;;;;AC/HA;AACA;AACA;AAEA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;;;;AClBA;AACA;AAEA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;;;;ACjBA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AAAA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;AC1EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;;;;;;;;;ACznEA;AAEA;AACA;AACA;AACA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAIA;AAKA;;;;;;;;;;;;;;;;;;;;;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;;;;;;;;;;;;;;;;;;;;;;;ACrDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAEA;;;;;;;;;;;;;;;;;;;;;AC3FA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;;;;;;;;;;;;;;;;;;;;;;;;;AChFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAEA;;;;;;;;;;;;;;;;;;;;;AChHA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;;;;;;;;;;;;;;;;;;;ACtFA;AACA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AAEA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;;;;;;;;;AClBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACnCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;ACnBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;ACpEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AAEA;AAEA;AACA;AAEA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;AC5DA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;ACpBA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AAAA;;;;;;;;;;;;ACXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACtMA;AACA;AACA;AAEA;AAEA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AACA;;;;;;;;;;;;AC/BA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;;;;;;;;;;ACXA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;;;;;;;;;;;;ACFA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;;;;;;;;;ACjCA;;;;;;;;;;;ACAA;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAKA;AACA,eA8BA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;A","sourceRoot":""}